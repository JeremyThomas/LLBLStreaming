//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro 5.9.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using System.ComponentModel;

namespace AW.Dal
{
	/// <summary>Index enum to fast-access Typed View EntityFields in the IEntityFields collection for the typed view : CustomerView.</summary>
	public enum CustomerViewFieldIndex
	{
		///<summary>CustomerId</summary>
		CustomerId,
		///<summary>Title</summary>
		Title,
		///<summary>FirstName</summary>
		FirstName,
		///<summary>MiddleName</summary>
		MiddleName,
		///<summary>LastName</summary>
		LastName,
		///<summary>Suffix</summary>
		Suffix,
		///<summary>Phone</summary>
		Phone,
		///<summary>EmailAddress</summary>
		EmailAddress,
		///<summary>EmailPromotion</summary>
		EmailPromotion,
		///<summary>AddressType</summary>
		AddressType,
		///<summary>AddressLine1</summary>
		AddressLine1,
		///<summary>AddressLine2</summary>
		AddressLine2,
		///<summary>City</summary>
		City,
		///<summary>StateProvinceName</summary>
		StateProvinceName,
		///<summary>PostalCode</summary>
		PostalCode,
		///<summary>CountryRegionName</summary>
		CountryRegionName,
		///<summary>Demographics</summary>
		Demographics,
		/// <summary></summary>
		AmountOfFields
	}
	/// <summary>Index enum to fast-access Typed View EntityFields in the IEntityFields collection for the typed view : CustomerViewLinq.</summary>
	public enum CustomerViewLinqFieldIndex
	{
		///<summary>CustomerId</summary>
		CustomerId,
		///<summary>Title</summary>
		Title,
		///<summary>FirstName</summary>
		FirstName,
		///<summary>MiddleName</summary>
		MiddleName,
		///<summary>LastName</summary>
		LastName,
		///<summary>Suffix</summary>
		Suffix,
		///<summary>Phone</summary>
		Phone,
		///<summary>EmailAddress</summary>
		EmailAddress,
		///<summary>EmailPromotion</summary>
		EmailPromotion,
		///<summary>AddressType</summary>
		AddressType,
		///<summary>AddressLine1</summary>
		AddressLine1,
		///<summary>AddressLine2</summary>
		AddressLine2,
		///<summary>City</summary>
		City,
		///<summary>StateProvinceName</summary>
		StateProvinceName,
		///<summary>PostalCode</summary>
		PostalCode,
		///<summary>CountryRegionName</summary>
		CountryRegionName,
		///<summary>Demographics</summary>
		Demographics,
		/// <summary></summary>
		AmountOfFields
	}
	/// <summary>Index enum to fast-access Typed View EntityFields in the IEntityFields collection for the typed view : CustomerViewQuerySpec.</summary>
	public enum CustomerViewQuerySpecFieldIndex
	{
		///<summary>CustomerId</summary>
		CustomerId,
		///<summary>Title</summary>
		Title,
		///<summary>FirstName</summary>
		FirstName,
		///<summary>MiddleName</summary>
		MiddleName,
		///<summary>LastName</summary>
		LastName,
		///<summary>Suffix</summary>
		Suffix,
		///<summary>Phone</summary>
		Phone,
		///<summary>EmailAddress</summary>
		EmailAddress,
		///<summary>EmailPromotion</summary>
		EmailPromotion,
		///<summary>AddressType</summary>
		AddressType,
		///<summary>AddressLine1</summary>
		AddressLine1,
		///<summary>AddressLine2</summary>
		AddressLine2,
		///<summary>City</summary>
		City,
		///<summary>StateProvinceName</summary>
		StateProvinceName,
		///<summary>PostalCode</summary>
		PostalCode,
		///<summary>CountryRegionName</summary>
		CountryRegionName,
		///<summary>Demographics</summary>
		Demographics,
		/// <summary></summary>
		AmountOfFields
	}

	/// <summary>Index enum to fast-access TypedList Fields in the Columns collection of the Typed List: CustomerList</summary>
	public enum CustomerListTypedListFieldIndex
	{
		///<summary>AddressLine1</summary>
		AddressLine1,
		///<summary>AddressLine2</summary>
		AddressLine2,
		///<summary>AddressType</summary>
		AddressType,
		///<summary>City</summary>
		City,
		///<summary>CountryRegionName</summary>
		CountryRegionName,
		///<summary>CustomerId</summary>
		CustomerId,
		///<summary>Demographics</summary>
		Demographics,
		///<summary>EmailAddress</summary>
		EmailAddress,
		///<summary>EmailPromotion</summary>
		EmailPromotion,
		///<summary>FirstName</summary>
		FirstName,
		///<summary>LastName</summary>
		LastName,
		///<summary>MiddleName</summary>
		MiddleName,
		///<summary>Phone</summary>
		Phone,
		///<summary>PostalCode</summary>
		PostalCode,
		///<summary>StateProvinceName</summary>
		StateProvinceName,
		///<summary>Suffix</summary>
		Suffix,
		///<summary>Title</summary>
		Title,
		/// <summary></summary>
		AmountOfFields
	}
	/// <summary>Index enum to fast-access TypedList Fields in the Columns collection of the Typed List: CustomerListLinq</summary>
	public enum CustomerListLinqTypedListFieldIndex
	{
		///<summary>AddressLine1</summary>
		AddressLine1,
		///<summary>AddressLine2</summary>
		AddressLine2,
		///<summary>AddressType</summary>
		AddressType,
		///<summary>City</summary>
		City,
		///<summary>CountryRegionName</summary>
		CountryRegionName,
		///<summary>CustomerId</summary>
		CustomerId,
		///<summary>Demographics</summary>
		Demographics,
		///<summary>EmailAddress</summary>
		EmailAddress,
		///<summary>EmailPromotion</summary>
		EmailPromotion,
		///<summary>FirstName</summary>
		FirstName,
		///<summary>LastName</summary>
		LastName,
		///<summary>MiddleName</summary>
		MiddleName,
		///<summary>Phone</summary>
		Phone,
		///<summary>PostalCode</summary>
		PostalCode,
		///<summary>StateProvinceName</summary>
		StateProvinceName,
		///<summary>Suffix</summary>
		Suffix,
		///<summary>Title</summary>
		Title,
		/// <summary></summary>
		AmountOfFields
	}
	/// <summary>Index enum to fast-access TypedList Fields in the Columns collection of the Typed List: CustomerListQuerySpec</summary>
	public enum CustomerListQuerySpecTypedListFieldIndex
	{
		///<summary>AddressLine1</summary>
		AddressLine1,
		///<summary>AddressLine2</summary>
		AddressLine2,
		///<summary>AddressType</summary>
		AddressType,
		///<summary>City</summary>
		City,
		///<summary>CountryRegionName</summary>
		CountryRegionName,
		///<summary>CustomerId</summary>
		CustomerId,
		///<summary>Demographics</summary>
		Demographics,
		///<summary>EmailAddress</summary>
		EmailAddress,
		///<summary>EmailPromotion</summary>
		EmailPromotion,
		///<summary>FirstName</summary>
		FirstName,
		///<summary>LastName</summary>
		LastName,
		///<summary>MiddleName</summary>
		MiddleName,
		///<summary>Phone</summary>
		Phone,
		///<summary>PostalCode</summary>
		PostalCode,
		///<summary>StateProvinceName</summary>
		StateProvinceName,
		///<summary>Suffix</summary>
		Suffix,
		///<summary>Title</summary>
		Title,
		/// <summary></summary>
		AmountOfFields
	}

	/// <summary>Enum definition for all the entity types defined in this namespace. Used by the entityfields factory.</summary>
	public enum EntityType
	{
		///<summary>AwbuildVersion</summary>
		AwbuildVersionEntity,
		///<summary>DatabaseLog</summary>
		DatabaseLogEntity,
		///<summary>ErrorLog</summary>
		ErrorLogEntity,
		///<summary>Department</summary>
		DepartmentEntity,
		///<summary>Employee</summary>
		EmployeeEntity,
		///<summary>EmployeeAddress</summary>
		EmployeeAddressEntity,
		///<summary>EmployeeDepartmentHistory</summary>
		EmployeeDepartmentHistoryEntity,
		///<summary>EmployeePayHistory</summary>
		EmployeePayHistoryEntity,
		///<summary>JobCandidate</summary>
		JobCandidateEntity,
		///<summary>Shift</summary>
		ShiftEntity,
		///<summary>Address</summary>
		AddressEntity,
		///<summary>AddressType</summary>
		AddressTypeEntity,
		///<summary>Contact</summary>
		ContactEntity,
		///<summary>ContactType</summary>
		ContactTypeEntity,
		///<summary>CountryRegion</summary>
		CountryRegionEntity,
		///<summary>StateProvince</summary>
		StateProvinceEntity,
		///<summary>BillOfMaterial</summary>
		BillOfMaterialEntity,
		///<summary>Culture</summary>
		CultureEntity,
		///<summary>Document</summary>
		DocumentEntity,
		///<summary>Illustration</summary>
		IllustrationEntity,
		///<summary>Location</summary>
		LocationEntity,
		///<summary>Product</summary>
		ProductEntity,
		///<summary>ProductCategory</summary>
		ProductCategoryEntity,
		///<summary>ProductCostHistory</summary>
		ProductCostHistoryEntity,
		///<summary>ProductDescription</summary>
		ProductDescriptionEntity,
		///<summary>ProductDocument</summary>
		ProductDocumentEntity,
		///<summary>ProductInventory</summary>
		ProductInventoryEntity,
		///<summary>ProductListPriceHistory</summary>
		ProductListPriceHistoryEntity,
		///<summary>ProductModel</summary>
		ProductModelEntity,
		///<summary>ProductModelIllustration</summary>
		ProductModelIllustrationEntity,
		///<summary>ProductModelProductDescriptionCulture</summary>
		ProductModelProductDescriptionCultureEntity,
		///<summary>ProductPhoto</summary>
		ProductPhotoEntity,
		///<summary>ProductProductPhoto</summary>
		ProductProductPhotoEntity,
		///<summary>ProductReview</summary>
		ProductReviewEntity,
		///<summary>ProductSubcategory</summary>
		ProductSubcategoryEntity,
		///<summary>PurchaseOrderHistory</summary>
		PurchaseOrderHistoryEntity,
		///<summary>SalesOrderHistory</summary>
		SalesOrderHistoryEntity,
		///<summary>ScrapReason</summary>
		ScrapReasonEntity,
		///<summary>TransactionHistory</summary>
		TransactionHistoryEntity,
		///<summary>TransactionHistoryArchive</summary>
		TransactionHistoryArchiveEntity,
		///<summary>UnitMeasure</summary>
		UnitMeasureEntity,
		///<summary>WorkOrder</summary>
		WorkOrderEntity,
		///<summary>WorkOrderHistory</summary>
		WorkOrderHistoryEntity,
		///<summary>WorkOrderRouting</summary>
		WorkOrderRoutingEntity,
		///<summary>ProductVendor</summary>
		ProductVendorEntity,
		///<summary>PurchaseOrderDetail</summary>
		PurchaseOrderDetailEntity,
		///<summary>PurchaseOrderHeader</summary>
		PurchaseOrderHeaderEntity,
		///<summary>ShipMethod</summary>
		ShipMethodEntity,
		///<summary>Vendor</summary>
		VendorEntity,
		///<summary>VendorAddress</summary>
		VendorAddressEntity,
		///<summary>VendorContact</summary>
		VendorContactEntity,
		///<summary>ContactCreditCard</summary>
		ContactCreditCardEntity,
		///<summary>CountryRegionCurrency</summary>
		CountryRegionCurrencyEntity,
		///<summary>CreditCard</summary>
		CreditCardEntity,
		///<summary>Currency</summary>
		CurrencyEntity,
		///<summary>CurrencyRate</summary>
		CurrencyRateEntity,
		///<summary>Customer</summary>
		CustomerEntity,
		///<summary>CustomerAddress</summary>
		CustomerAddressEntity,
		///<summary>CustomerViewRelated</summary>
		CustomerViewRelatedEntity,
		///<summary>Individual</summary>
		IndividualEntity,
		///<summary>SalesOrderDetail</summary>
		SalesOrderDetailEntity,
		///<summary>SalesOrderHeader</summary>
		SalesOrderHeaderEntity,
		///<summary>SalesOrderHeaderSalesReason</summary>
		SalesOrderHeaderSalesReasonEntity,
		///<summary>SalesPerson</summary>
		SalesPersonEntity,
		///<summary>SalesPersonQuotaHistory</summary>
		SalesPersonQuotaHistoryEntity,
		///<summary>SalesReason</summary>
		SalesReasonEntity,
		///<summary>SalesTaxRate</summary>
		SalesTaxRateEntity,
		///<summary>SalesTerritory</summary>
		SalesTerritoryEntity,
		///<summary>SalesTerritoryHistory</summary>
		SalesTerritoryHistoryEntity,
		///<summary>ShoppingCartItem</summary>
		ShoppingCartItemEntity,
		///<summary>SpecialOffer</summary>
		SpecialOfferEntity,
		///<summary>SpecialOfferProduct</summary>
		SpecialOfferProductEntity,
		///<summary>Store</summary>
		StoreEntity,
		///<summary>StoreContact</summary>
		StoreContactEntity
	}

	/// <summary>Enum definition for all the typed view types defined in this namespace. Used by the entityfields factory.</summary>
	public enum TypedViewType
	{
		///<summary>CustomerView</summary>
		CustomerViewTypedView,
		///<summary>CustomerViewLinq</summary>
		CustomerViewLinqTypedView,
		///<summary>CustomerViewQuerySpec</summary>
		CustomerViewQuerySpecTypedView
	}


	// __LLBLGENPRO_USER_CODE_REGION_START CustomUserConstants

	
    public enum ContactType : byte
    {
      AccountingManager = 1,
      AssistantSalesAgent = 2,
      AssistantSalesRepresentative = 3,
      CoordinatorForeignMarkets = 4,
      ExportAdministrator = 5,
      InternationalMarketingManager = 6,
      MarketingAssistant = 7,
      MarketingManager = 8,
      MarketingRepresentative = 9,
      OrderAdministrator = 10,
      Owner = 11,
      OwnerMarketingAssistant = 12,
      ProductManager = 13,
      PurchasingAgent = 14,
      PurchasingManager = 15,
      RegionalAccountRepresentative = 16,
      SalesAgent = 17,
      SalesAssociate = 18,
      SalesManager = 19,
      SalesRepresentative = 20,
    }

    [TypeConverter(typeof (AW.Helper.TypeConverters.HumanizedEnumConverter))]
    public enum AddressType : byte
    {
      Billing = 1,
      Home = 2,
      MainOffice = 3,
      Primary = 4,
      Shipping = 5,
      Archive = 6
    };

    public enum OrderStatus : byte
    {
      InProcess = 1,
      Approved,
      Backordered,
      Rejected,
      Shipped,
      Cancelled
    }

    public enum OrderPlacesBy : byte
    {
      SalesPerson,
      Customer
    }

    public enum MaritalStatus
    {
      [Description("Married")] M,
      [Description("Single")] S
    }

    public class MaritalStatusDBConverter : AW.Helper.TypeConverters.BaseEnumConverter<MaritalStatus>
    {
    }

    public enum Gender : byte
    {
      [Description("Male")] M,
      [Description("Female")] F
    }

    public class GenderDBConverter : AW.Helper.TypeConverters.BaseEnumConverter<Gender>
    {
    }

    /// <summary>
    /// For IsSalaried but not used
    /// </summary>
    public enum JobClassification : byte
    {
      Hourly,
      Salaried
    }

    /// <summary>
    /// For IsCurrent but not used
    /// </summary>
    public enum Current : byte
    {
      Inactive,
      Active
    }

    public enum PayFrequency : byte
    {
      Monthly = 1,
      BiWeekly
    }

    public enum NameStyle : byte
    {
      FirstLast,
      LastFirst
    }

    /// <summary>
    ///   0 = Contact does not wish to receive e-mail promotions,
    ///   1 = Contact does wish to receive e-mail promotions from AdventureWorks,
    ///   2 = Contact does wish to receive e-mail promotions from AdventureWorks and selected partners.
    /// </summary>
    public enum EmailPromotion : byte
    {
      None,
      AWOnly,
      AWAndPartners
    }

    /// <summary>
    ///   0 = StateProvinceCode exists. 1 = StateProvinceCode unavailable, using CountryRegionCode.
    /// </summary>
    public enum StateProvinceCodeExistence : byte
    {
      Exists,
      Unavailable
    }

    /// <summary>
    ///   1 = Pending approval, 2 = Approved, 3 = Obsolete
    /// </summary>
    public enum ProductMaintenanceDocumentStatus : byte
    {
      PendingApproval = 1,
      Approved,
      Obsolete
    }

    /// <summary>
    ///   0 = Product is purchased, 1 = Product is manufactured in-house.
    /// </summary>
    public enum ProductMake : byte
    {
      Purchased,
      InHouse
    }

    /// <summary>
    ///   0 = Product is not a salable item. 1 = Product is salable.
    /// </summary>
    public enum ProductFinished : byte
    {
      Salable,
      NotSalable
    }

    /// <summary>
    ///   R = Road, M = Mountain, T = Touring, S = Standard
    /// </summary>
    public enum ProductLine : byte
    {
      [Description("Road")] R,
      [Description("Mountain")] M,
      [Description("Touring")] T,
      [Description("Standard")] S
    }

    public class ProductLineDBConverter : AW.Helper.TypeConverters.BaseEnumConverter<ProductLine>
    {
    }

    /// <summary>
    ///   H = High, M = Medium, L = Low
    /// </summary>
    public enum ProductClass : byte
    {
      [Description("High")] H,
      [Description("Medium")] M,
      [Description("Low")] L
    }

    public class ProductClassDBConverter : AW.Helper.TypeConverters.BaseEnumConverter<ProductClass>
    {
    }

    /// <summary>
    ///   W = Womens, M = Mens, U = Universal
    /// </summary>
    public enum ProductStyle : byte
    {
      [Description("Womens")] W,
      [Description("Mens")] M,
      [Description("Universal")] U
    }

    public class ProductStyleDBConverter : AW.Helper.TypeConverters.BaseEnumConverter<ProductStyle>
    {
    }

    public enum PurchaseOrderStatus : byte
    {
      Pending = 1,
      Approved,
      Rejected,
      Complete,
    }

    public enum CreditRating : byte
    {
      Superior = 1,
      Excellent,
      AboveAverage,
      Average,
      BelowAverage,
    }

    public enum TaxApplication : byte
    {
      Retail = 1,
      Wholesale,
      All,
    }

	// __LLBLGENPRO_USER_CODE_REGION_END

}

