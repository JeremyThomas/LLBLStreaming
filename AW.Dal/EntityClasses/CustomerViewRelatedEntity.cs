//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro 5.9.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using System.ComponentModel;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using AW.Dal.HelperClasses;
using AW.Dal.FactoryClasses;
using AW.Dal.RelationClasses;
using System.ComponentModel.DataAnnotations;
using SD.LLBLGen.Pro.ORMSupportClasses;

namespace AW.Dal.EntityClasses
{
	// __LLBLGENPRO_USER_CODE_REGION_START AdditionalNamespaces
	// __LLBLGENPRO_USER_CODE_REGION_END
	/// <summary>Entity class which represents the entity 'CustomerViewRelated'.<br/><br/>MS_Description: Individual customers (names and addresses) that purchase Adventure Works Cycles products online.<br/></summary>
	[Serializable]
	public partial class CustomerViewRelatedEntity : CommonEntityBase
		// __LLBLGENPRO_USER_CODE_REGION_START AdditionalInterfaces
		// __LLBLGENPRO_USER_CODE_REGION_END	
	{
		private EntityCollection<SalesOrderHeaderEntity> _salesOrderHeader;

		// __LLBLGENPRO_USER_CODE_REGION_START PrivateMembers
		// __LLBLGENPRO_USER_CODE_REGION_END
		private static Dictionary<string, string>	_customProperties;
		private static CustomerViewRelatedEntityStaticMetaData _staticMetaData = new CustomerViewRelatedEntityStaticMetaData();
		private static CustomerViewRelatedRelations _relationsFactory = new CustomerViewRelatedRelations();

		/// <summary>All names of fields mapped onto a relation. Usable for in-memory filtering</summary>
		public static partial class MemberNames
		{
			/// <summary>Member name SalesOrderHeader</summary>
			public static readonly string SalesOrderHeader = "SalesOrderHeader";
		}

		/// <summary>Static meta-data storage for navigator related information</summary>
		protected class CustomerViewRelatedEntityStaticMetaData : EntityStaticMetaDataBase
		{
			public CustomerViewRelatedEntityStaticMetaData()
			{
				SetEntityCoreInfo("CustomerViewRelatedEntity", InheritanceHierarchyType.None, false, (int)AW.Dal.EntityType.CustomerViewRelatedEntity, typeof(CustomerViewRelatedEntity), typeof(CustomerViewRelatedEntityFactory), false);
				AddNavigatorMetaData<CustomerViewRelatedEntity, EntityCollection<SalesOrderHeaderEntity>>("SalesOrderHeader", a => a._salesOrderHeader, (a, b) => a._salesOrderHeader = b, a => a.SalesOrderHeader, () => new CustomerViewRelatedRelations().SalesOrderHeaderEntityUsingCustomerID, typeof(SalesOrderHeaderEntity), (int)AW.Dal.EntityType.SalesOrderHeaderEntity);
			}
		}

		/// <summary>Static ctor</summary>
		static CustomerViewRelatedEntity()
		{
			SetupCustomPropertyHashtables();
		}

		/// <summary> CTor</summary>
		public CustomerViewRelatedEntity()
		{
			InitClassEmpty(null, null);
		}

		/// <summary> CTor</summary>
		/// <param name="fields">Fields object to set as the fields for this entity.</param>
		public CustomerViewRelatedEntity(IEntityFields2 fields)
		{
			InitClassEmpty(null, fields);
		}

		/// <summary> CTor</summary>
		/// <param name="validator">The custom validator object for this CustomerViewRelatedEntity</param>
		public CustomerViewRelatedEntity(IValidator validator)
		{
			InitClassEmpty(validator, null);
		}

		/// <summary> CTor</summary>
		/// <param name="customerId">PK value for CustomerViewRelated which data should be fetched into this CustomerViewRelated object</param>
		public CustomerViewRelatedEntity(System.Int32 customerId) : this(customerId, null)
		{
		}

		/// <summary> CTor</summary>
		/// <param name="customerId">PK value for CustomerViewRelated which data should be fetched into this CustomerViewRelated object</param>
		/// <param name="validator">The custom validator object for this CustomerViewRelatedEntity</param>
		public CustomerViewRelatedEntity(System.Int32 customerId, IValidator validator)
		{
			InitClassEmpty(validator, null);
			this.CustomerId = customerId;
		}

		/// <summary>Private CTor for deserialization</summary>
		/// <param name="info"></param>
		/// <param name="context"></param>
		protected CustomerViewRelatedEntity(SerializationInfo info, StreamingContext context) : base(info, context)
		{
			// __LLBLGENPRO_USER_CODE_REGION_START DeserializationConstructor
			// __LLBLGENPRO_USER_CODE_REGION_END
		}

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'SalesOrderHeader' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoSalesOrderHeader() { return CreateRelationInfoForNavigator("SalesOrderHeader"); }
		
		/// <inheritdoc/>
		protected override EntityStaticMetaDataBase GetEntityStaticMetaData() {	return _staticMetaData; }

		/// <summary>Initializes the class members</summary>
		private void InitClassMembers()
		{
			PerformDependencyInjection();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassMembers
			// __LLBLGENPRO_USER_CODE_REGION_END
			OnInitClassMembersComplete();
		}

		/// <summary>Initializes the hashtables for the entity type and entity field custom properties. </summary>
		private static void SetupCustomPropertyHashtables()
		{
			_customProperties = new Dictionary<string, string>();
			_customProperties.Add("MS_Description", @"Individual customers (names and addresses) that purchase Adventure Works Cycles products online.");
		}

		/// <summary>Initializes the class with empty data, as if it is a new Entity.</summary>
		/// <param name="validator">The validator object for this CustomerViewRelatedEntity</param>
		/// <param name="fields">Fields of this entity</param>
		private void InitClassEmpty(IValidator validator, IEntityFields2 fields)
		{
			OnInitializing();
			this.Fields = fields ?? CreateFields();
			this.Validator = validator;
			InitClassMembers();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassEmpty
			// __LLBLGENPRO_USER_CODE_REGION_END

			OnInitialized();
		}

		/// <summary>The relations object holding all relations of this entity with other entity classes.</summary>
		public static CustomerViewRelatedRelations Relations { get { return _relationsFactory; } }

		/// <summary>The custom properties for this entity type.</summary>
		/// <remarks>The data returned from this property should be considered read-only: it is not thread safe to alter this data at runtime.</remarks>
		public  static Dictionary<string, string> CustomProperties { get { return _customProperties;} }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'SalesOrderHeader' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathSalesOrderHeader { get { return _staticMetaData.GetPrefetchPathElement("SalesOrderHeader", CommonEntityBase.CreateEntityCollection<SalesOrderHeaderEntity>()); } }

		/// <inheritdoc/>
		[Browsable(false), XmlIgnore]
		protected override Dictionary<string, string> CustomPropertiesOfType { get { return CustomProperties;} }

		/// <summary>The AddressLine1 property of the Entity CustomerViewRelated<br/><br/></summary>
		/// <remarks>Mapped on  view field: "vIndividualCustomer"."AddressLine1".<br/>View field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 60.<br/>View field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.String AddressLine1
		{
			get { return (System.String)GetValue((int)CustomerViewRelatedFieldIndex.AddressLine1, true); }
			set	{ SetValue((int)CustomerViewRelatedFieldIndex.AddressLine1, value); }
		}

		/// <summary>The AddressLine2 property of the Entity CustomerViewRelated<br/><br/></summary>
		/// <remarks>Mapped on  view field: "vIndividualCustomer"."AddressLine2".<br/>View field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 60.<br/>View field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String AddressLine2
		{
			get { return (System.String)GetValue((int)CustomerViewRelatedFieldIndex.AddressLine2, true); }
			set	{ SetValue((int)CustomerViewRelatedFieldIndex.AddressLine2, value); }
		}

		/// <summary>The AddressType property of the Entity CustomerViewRelated<br/><br/></summary>
		/// <remarks>Mapped on  view field: "vIndividualCustomer"."AddressType".<br/>View field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 50.<br/>View field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.String AddressType
		{
			get { return (System.String)GetValue((int)CustomerViewRelatedFieldIndex.AddressType, true); }
			set	{ SetValue((int)CustomerViewRelatedFieldIndex.AddressType, value); }
		}

		/// <summary>The City property of the Entity CustomerViewRelated<br/><br/></summary>
		/// <remarks>Mapped on  view field: "vIndividualCustomer"."City".<br/>View field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 30.<br/>View field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.String City
		{
			get { return (System.String)GetValue((int)CustomerViewRelatedFieldIndex.City, true); }
			set	{ SetValue((int)CustomerViewRelatedFieldIndex.City, value); }
		}

		/// <summary>The CountryRegionName property of the Entity CustomerViewRelated<br/><br/></summary>
		/// <remarks>Mapped on  view field: "vIndividualCustomer"."CountryRegionName".<br/>View field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 50.<br/>View field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.String CountryRegionName
		{
			get { return (System.String)GetValue((int)CustomerViewRelatedFieldIndex.CountryRegionName, true); }
			set	{ SetValue((int)CustomerViewRelatedFieldIndex.CountryRegionName, value); }
		}

		/// <summary>The CustomerId property of the Entity CustomerViewRelated<br/><br/></summary>
		/// <remarks>Mapped on  view field: "vIndividualCustomer"."CustomerID".<br/>View field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>View field behavior characteristics (is nullable, is PK, is identity): false, true, false</remarks>
		public virtual System.Int32 CustomerId
		{
			get { return (System.Int32)GetValue((int)CustomerViewRelatedFieldIndex.CustomerId, true); }
			set { SetValue((int)CustomerViewRelatedFieldIndex.CustomerId, value); }		}

		/// <summary>The Demographics property of the Entity CustomerViewRelated<br/><br/></summary>
		/// <remarks>Mapped on  view field: "vIndividualCustomer"."Demographics".<br/>View field type characteristics (type, precision, scale, length): Xml, 0, 0, 2147483647.<br/>View field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String Demographics
		{
			get { return (System.String)GetValue((int)CustomerViewRelatedFieldIndex.Demographics, true); }
			set	{ SetValue((int)CustomerViewRelatedFieldIndex.Demographics, value); }
		}

		/// <summary>The EmailAddress property of the Entity CustomerViewRelated<br/><br/></summary>
		/// <remarks>Mapped on  view field: "vIndividualCustomer"."EmailAddress".<br/>View field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 50.<br/>View field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String EmailAddress
		{
			get { return (System.String)GetValue((int)CustomerViewRelatedFieldIndex.EmailAddress, true); }
			set	{ SetValue((int)CustomerViewRelatedFieldIndex.EmailAddress, value); }
		}

		/// <summary>The EmailPromotion property of the Entity CustomerViewRelated<br/><br/></summary>
		/// <remarks>Mapped on  view field: "vIndividualCustomer"."EmailPromotion".<br/>View field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>View field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual AW.Data.EmailPromotion EmailPromotion
		{
			get { return (AW.Data.EmailPromotion)GetValue((int)CustomerViewRelatedFieldIndex.EmailPromotion, true); }
			set	{ SetValue((int)CustomerViewRelatedFieldIndex.EmailPromotion, value); }
		}

		/// <summary>The FirstName property of the Entity CustomerViewRelated<br/><br/></summary>
		/// <remarks>Mapped on  view field: "vIndividualCustomer"."FirstName".<br/>View field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 50.<br/>View field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.String FirstName
		{
			get { return (System.String)GetValue((int)CustomerViewRelatedFieldIndex.FirstName, true); }
			set	{ SetValue((int)CustomerViewRelatedFieldIndex.FirstName, value); }
		}

		/// <summary>The LastName property of the Entity CustomerViewRelated<br/><br/></summary>
		/// <remarks>Mapped on  view field: "vIndividualCustomer"."LastName".<br/>View field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 50.<br/>View field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.String LastName
		{
			get { return (System.String)GetValue((int)CustomerViewRelatedFieldIndex.LastName, true); }
			set	{ SetValue((int)CustomerViewRelatedFieldIndex.LastName, value); }
		}

		/// <summary>The MiddleName property of the Entity CustomerViewRelated<br/><br/></summary>
		/// <remarks>Mapped on  view field: "vIndividualCustomer"."MiddleName".<br/>View field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 50.<br/>View field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String MiddleName
		{
			get { return (System.String)GetValue((int)CustomerViewRelatedFieldIndex.MiddleName, true); }
			set	{ SetValue((int)CustomerViewRelatedFieldIndex.MiddleName, value); }
		}

		/// <summary>The Phone property of the Entity CustomerViewRelated<br/><br/></summary>
		/// <remarks>Mapped on  view field: "vIndividualCustomer"."Phone".<br/>View field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 25.<br/>View field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String Phone
		{
			get { return (System.String)GetValue((int)CustomerViewRelatedFieldIndex.Phone, true); }
			set	{ SetValue((int)CustomerViewRelatedFieldIndex.Phone, value); }
		}

		/// <summary>The PostalCode property of the Entity CustomerViewRelated<br/><br/></summary>
		/// <remarks>Mapped on  view field: "vIndividualCustomer"."PostalCode".<br/>View field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 15.<br/>View field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.String PostalCode
		{
			get { return (System.String)GetValue((int)CustomerViewRelatedFieldIndex.PostalCode, true); }
			set	{ SetValue((int)CustomerViewRelatedFieldIndex.PostalCode, value); }
		}

		/// <summary>The StateProvinceName property of the Entity CustomerViewRelated<br/><br/></summary>
		/// <remarks>Mapped on  view field: "vIndividualCustomer"."StateProvinceName".<br/>View field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 50.<br/>View field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.String StateProvinceName
		{
			get { return (System.String)GetValue((int)CustomerViewRelatedFieldIndex.StateProvinceName, true); }
			set	{ SetValue((int)CustomerViewRelatedFieldIndex.StateProvinceName, value); }
		}

		/// <summary>The Suffix property of the Entity CustomerViewRelated<br/><br/></summary>
		/// <remarks>Mapped on  view field: "vIndividualCustomer"."Suffix".<br/>View field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 10.<br/>View field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String Suffix
		{
			get { return (System.String)GetValue((int)CustomerViewRelatedFieldIndex.Suffix, true); }
			set	{ SetValue((int)CustomerViewRelatedFieldIndex.Suffix, value); }
		}

		/// <summary>The Title property of the Entity CustomerViewRelated<br/><br/></summary>
		/// <remarks>Mapped on  view field: "vIndividualCustomer"."Title".<br/>View field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 8.<br/>View field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String Title
		{
			get { return (System.String)GetValue((int)CustomerViewRelatedFieldIndex.Title, true); }
			set	{ SetValue((int)CustomerViewRelatedFieldIndex.Title, value); }
		}

		/// <summary>Gets the EntityCollection with the related entities of type 'SalesOrderHeaderEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(SalesOrderHeaderEntity))]
		public virtual EntityCollection<SalesOrderHeaderEntity> SalesOrderHeader { get { return GetOrCreateEntityCollection<SalesOrderHeaderEntity, SalesOrderHeaderEntityFactory>("CustomerViewRelated", true, false, ref _salesOrderHeader); } }

		// __LLBLGENPRO_USER_CODE_REGION_START CustomEntityCode
		// __LLBLGENPRO_USER_CODE_REGION_END

	}
}

namespace AW.Dal
{
	public enum CustomerViewRelatedFieldIndex
	{
		///<summary>AddressLine1. </summary>
		AddressLine1,
		///<summary>AddressLine2. </summary>
		AddressLine2,
		///<summary>AddressType. </summary>
		AddressType,
		///<summary>City. </summary>
		City,
		///<summary>CountryRegionName. </summary>
		CountryRegionName,
		///<summary>CustomerId. </summary>
		CustomerId,
		///<summary>Demographics. </summary>
		Demographics,
		///<summary>EmailAddress. </summary>
		EmailAddress,
		///<summary>EmailPromotion. </summary>
		EmailPromotion,
		///<summary>FirstName. </summary>
		FirstName,
		///<summary>LastName. </summary>
		LastName,
		///<summary>MiddleName. </summary>
		MiddleName,
		///<summary>Phone. </summary>
		Phone,
		///<summary>PostalCode. </summary>
		PostalCode,
		///<summary>StateProvinceName. </summary>
		StateProvinceName,
		///<summary>Suffix. </summary>
		Suffix,
		///<summary>Title. </summary>
		Title,
		/// <summary></summary>
		AmountOfFields
	}
}

namespace AW.Dal.RelationClasses
{
	/// <summary>Implements the relations factory for the entity: CustomerViewRelated. </summary>
	public partial class CustomerViewRelatedRelations: RelationFactory
	{
		/// <summary>Returns a new IEntityRelation object, between CustomerViewRelatedEntity and SalesOrderHeaderEntity over the 1:n relation they have, using the relation between the fields: CustomerViewRelated.CustomerId - SalesOrderHeader.CustomerID</summary>
		public virtual IEntityRelation SalesOrderHeaderEntityUsingCustomerID
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "SalesOrderHeader", true, new[] { CustomerViewRelatedFields.CustomerId, SalesOrderHeaderFields.CustomerID }); }
		}

	}
	
	/// <summary>Static class which is used for providing relationship instances which are re-used internally for syncing</summary>
	internal static class StaticCustomerViewRelatedRelations
	{
		internal static readonly IEntityRelation SalesOrderHeaderEntityUsingCustomerIDStatic = new CustomerViewRelatedRelations().SalesOrderHeaderEntityUsingCustomerID;

		/// <summary>CTor</summary>
		static StaticCustomerViewRelatedRelations() { }
	}
}
