//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro 5.9.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using System.ComponentModel;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using AW.Dal.HelperClasses;
using AW.Dal.FactoryClasses;
using AW.Dal.RelationClasses;
using System.ComponentModel.DataAnnotations;
using SD.LLBLGen.Pro.ORMSupportClasses;

namespace AW.Dal.EntityClasses
{
	// __LLBLGENPRO_USER_CODE_REGION_START AdditionalNamespaces
	// __LLBLGENPRO_USER_CODE_REGION_END
	/// <summary>Entity class which represents the entity 'ProductDescription'.<br/><br/>MS_Description: Product descriptions in several languages.<br/></summary>
	[Serializable]
	public partial class ProductDescriptionEntity : CommonEntityBase
		// __LLBLGENPRO_USER_CODE_REGION_START AdditionalInterfaces
		// __LLBLGENPRO_USER_CODE_REGION_END	
	{
		private EntityCollection<ProductModelProductDescriptionCultureEntity> _productModelProductDescriptionCultures;
		private EntityCollection<CultureEntity> _cultureCollectionViaProductModelProductDescriptionCulture;
		private EntityCollection<ProductModelEntity> _models;

		// __LLBLGENPRO_USER_CODE_REGION_START PrivateMembers
		// __LLBLGENPRO_USER_CODE_REGION_END
		private static Dictionary<string, string>	_customProperties;
		private static Dictionary<string, Dictionary<string, string>>	_fieldsCustomProperties;
		private static ProductDescriptionEntityStaticMetaData _staticMetaData = new ProductDescriptionEntityStaticMetaData();
		private static ProductDescriptionRelations _relationsFactory = new ProductDescriptionRelations();

		/// <summary>All names of fields mapped onto a relation. Usable for in-memory filtering</summary>
		public static partial class MemberNames
		{
			/// <summary>Member name ProductModelProductDescriptionCultures</summary>
			public static readonly string ProductModelProductDescriptionCultures = "ProductModelProductDescriptionCultures";
			/// <summary>Member name CultureCollectionViaProductModelProductDescriptionCulture</summary>
			public static readonly string CultureCollectionViaProductModelProductDescriptionCulture = "CultureCollectionViaProductModelProductDescriptionCulture";
			/// <summary>Member name Models</summary>
			public static readonly string Models = "Models";
		}

		/// <summary>Static meta-data storage for navigator related information</summary>
		protected class ProductDescriptionEntityStaticMetaData : EntityStaticMetaDataBase
		{
			public ProductDescriptionEntityStaticMetaData()
			{
				SetEntityCoreInfo("ProductDescriptionEntity", InheritanceHierarchyType.None, false, (int)AW.Dal.EntityType.ProductDescriptionEntity, typeof(ProductDescriptionEntity), typeof(ProductDescriptionEntityFactory), false);
				AddNavigatorMetaData<ProductDescriptionEntity, EntityCollection<ProductModelProductDescriptionCultureEntity>>("ProductModelProductDescriptionCultures", a => a._productModelProductDescriptionCultures, (a, b) => a._productModelProductDescriptionCultures = b, a => a.ProductModelProductDescriptionCultures, () => new ProductDescriptionRelations().ProductModelProductDescriptionCultureEntityUsingProductDescriptionID, typeof(ProductModelProductDescriptionCultureEntity), (int)AW.Dal.EntityType.ProductModelProductDescriptionCultureEntity);
				AddNavigatorMetaData<ProductDescriptionEntity, EntityCollection<CultureEntity>>("CultureCollectionViaProductModelProductDescriptionCulture", a => a._cultureCollectionViaProductModelProductDescriptionCulture, (a, b) => a._cultureCollectionViaProductModelProductDescriptionCulture = b, a => a.CultureCollectionViaProductModelProductDescriptionCulture, () => new ProductDescriptionRelations().ProductModelProductDescriptionCultureEntityUsingProductDescriptionID, () => new ProductModelProductDescriptionCultureRelations().CultureEntityUsingCultureID, "ProductDescriptionEntity__", "ProductModelProductDescriptionCulture_", typeof(CultureEntity), (int)AW.Dal.EntityType.CultureEntity);
				AddNavigatorMetaData<ProductDescriptionEntity, EntityCollection<ProductModelEntity>>("Models", a => a._models, (a, b) => a._models = b, a => a.Models, () => new ProductDescriptionRelations().ProductModelProductDescriptionCultureEntityUsingProductDescriptionID, () => new ProductModelProductDescriptionCultureRelations().ProductModelEntityUsingProductModelID, "ProductDescriptionEntity__", "ProductModelProductDescriptionCulture_", typeof(ProductModelEntity), (int)AW.Dal.EntityType.ProductModelEntity);
			}
		}

		/// <summary>Static ctor</summary>
		static ProductDescriptionEntity()
		{
			SetupCustomPropertyHashtables();
		}

		/// <summary> CTor</summary>
		public ProductDescriptionEntity()
		{
			InitClassEmpty(null, null);
		}

		/// <summary> CTor</summary>
		/// <param name="fields">Fields object to set as the fields for this entity.</param>
		public ProductDescriptionEntity(IEntityFields2 fields)
		{
			InitClassEmpty(null, fields);
		}

		/// <summary> CTor</summary>
		/// <param name="validator">The custom validator object for this ProductDescriptionEntity</param>
		public ProductDescriptionEntity(IValidator validator)
		{
			InitClassEmpty(validator, null);
		}

		/// <summary> CTor</summary>
		/// <param name="productDescriptionID">PK value for ProductDescription which data should be fetched into this ProductDescription object</param>
		public ProductDescriptionEntity(System.Int32 productDescriptionID) : this(productDescriptionID, null)
		{
		}

		/// <summary> CTor</summary>
		/// <param name="productDescriptionID">PK value for ProductDescription which data should be fetched into this ProductDescription object</param>
		/// <param name="validator">The custom validator object for this ProductDescriptionEntity</param>
		public ProductDescriptionEntity(System.Int32 productDescriptionID, IValidator validator)
		{
			InitClassEmpty(validator, null);
			this.ProductDescriptionID = productDescriptionID;
		}

		/// <summary>Private CTor for deserialization</summary>
		/// <param name="info"></param>
		/// <param name="context"></param>
		protected ProductDescriptionEntity(SerializationInfo info, StreamingContext context) : base(info, context)
		{
			// __LLBLGENPRO_USER_CODE_REGION_START DeserializationConstructor
			// __LLBLGENPRO_USER_CODE_REGION_END
		}

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'ProductModelProductDescriptionCulture' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoProductModelProductDescriptionCultures() { return CreateRelationInfoForNavigator("ProductModelProductDescriptionCultures"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'Culture' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCultureCollectionViaProductModelProductDescriptionCulture() { return CreateRelationInfoForNavigator("CultureCollectionViaProductModelProductDescriptionCulture"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'ProductModel' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoModels() { return CreateRelationInfoForNavigator("Models"); }
		
		/// <inheritdoc/>
		protected override EntityStaticMetaDataBase GetEntityStaticMetaData() {	return _staticMetaData; }

		/// <summary>Initializes the class members</summary>
		private void InitClassMembers()
		{
			PerformDependencyInjection();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassMembers
			// __LLBLGENPRO_USER_CODE_REGION_END
			OnInitClassMembersComplete();
		}

		/// <summary>Initializes the hashtables for the entity type and entity field custom properties. </summary>
		private static void SetupCustomPropertyHashtables()
		{
			_customProperties = new Dictionary<string, string>();
			_customProperties.Add("MS_Description", @"Product descriptions in several languages.");
			_fieldsCustomProperties = new Dictionary<string, Dictionary<string, string>>();
			Dictionary<string, string> fieldHashtable;
			fieldHashtable = new Dictionary<string, string>();
			fieldHashtable.Add("MS_Description", @"Description of the product.");
			_fieldsCustomProperties.Add("Description", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();
			fieldHashtable.Add("MS_Description", @"Date and time the record was last updated.");
			_fieldsCustomProperties.Add("ModifiedDate", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();
			fieldHashtable.Add("MS_Description", @"Clustered index created by a primary key constraint.");
			_fieldsCustomProperties.Add("ProductDescriptionID", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();
			fieldHashtable.Add("MS_Description", @"ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.");
			_fieldsCustomProperties.Add("Rowguid", fieldHashtable);
		}

		/// <summary>Initializes the class with empty data, as if it is a new Entity.</summary>
		/// <param name="validator">The validator object for this ProductDescriptionEntity</param>
		/// <param name="fields">Fields of this entity</param>
		private void InitClassEmpty(IValidator validator, IEntityFields2 fields)
		{
			OnInitializing();
			this.Fields = fields ?? CreateFields();
			this.Validator = validator;
			InitClassMembers();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassEmpty
			// __LLBLGENPRO_USER_CODE_REGION_END

			OnInitialized();
		}

		/// <summary>The relations object holding all relations of this entity with other entity classes.</summary>
		public static ProductDescriptionRelations Relations { get { return _relationsFactory; } }

		/// <summary>The custom properties for this entity type.</summary>
		/// <remarks>The data returned from this property should be considered read-only: it is not thread safe to alter this data at runtime.</remarks>
		public  static Dictionary<string, string> CustomProperties { get { return _customProperties;} }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ProductModelProductDescriptionCulture' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathProductModelProductDescriptionCultures { get { return _staticMetaData.GetPrefetchPathElement("ProductModelProductDescriptionCultures", CommonEntityBase.CreateEntityCollection<ProductModelProductDescriptionCultureEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Culture' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCultureCollectionViaProductModelProductDescriptionCulture { get { return _staticMetaData.GetPrefetchPathElement("CultureCollectionViaProductModelProductDescriptionCulture", CommonEntityBase.CreateEntityCollection<CultureEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ProductModel' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathModels { get { return _staticMetaData.GetPrefetchPathElement("Models", CommonEntityBase.CreateEntityCollection<ProductModelEntity>()); } }

		/// <inheritdoc/>
		[Browsable(false), XmlIgnore]
		protected override Dictionary<string, string> CustomPropertiesOfType { get { return CustomProperties;} }

		/// <summary>The custom properties for the fields of this entity type. The returned Hashtable contains per fieldname a hashtable of name-value pairs. </summary>
		/// <remarks>The data returned from this property should be considered read-only: it is not thread safe to alter this data at runtime.</remarks>
		public  static Dictionary<string, Dictionary<string, string>> FieldsCustomProperties { get { return _fieldsCustomProperties;} }

		/// <inheritdoc/>
		[Browsable(false), XmlIgnore]
		protected override Dictionary<string, Dictionary<string, string>> FieldsCustomPropertiesOfType { get { return FieldsCustomProperties;} }

		/// <summary>The Description property of the Entity ProductDescription<br/><br/>MS_Description: Description of the product.<br/>Description of the product.</summary>
		/// <remarks>Mapped on  table field: "ProductDescription"."Description".<br/>Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 400.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.String Description
		{
			get { return (System.String)GetValue((int)ProductDescriptionFieldIndex.Description, true); }
			set	{ SetValue((int)ProductDescriptionFieldIndex.Description, value); }
		}

		/// <summary>The ModifiedDate property of the Entity ProductDescription<br/><br/>MS_Description: Date and time the record was last updated.<br/>Date and time the record was last updated.</summary>
		/// <remarks>Mapped on  table field: "ProductDescription"."ModifiedDate".<br/>Table field type characteristics (type, precision, scale, length): DateTime, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.DateTime ModifiedDate
		{
			get { return (System.DateTime)GetValue((int)ProductDescriptionFieldIndex.ModifiedDate, true); }
			set	{ SetValue((int)ProductDescriptionFieldIndex.ModifiedDate, value); }
		}

		/// <summary>The ProductDescriptionID property of the Entity ProductDescription<br/><br/>MS_Description: Clustered index created by a primary key constraint.<br/>Clustered index created by a primary key constraint.</summary>
		/// <remarks>Mapped on  table field: "ProductDescription"."ProductDescriptionID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, true, true</remarks>
		public virtual System.Int32 ProductDescriptionID
		{
			get { return (System.Int32)GetValue((int)ProductDescriptionFieldIndex.ProductDescriptionID, true); }
			set { SetValue((int)ProductDescriptionFieldIndex.ProductDescriptionID, value); }		}

		/// <summary>The Rowguid property of the Entity ProductDescription<br/><br/>MS_Description: ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.<br/>ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.</summary>
		/// <remarks>Mapped on  table field: "ProductDescription"."rowguid".<br/>Table field type characteristics (type, precision, scale, length): UniqueIdentifier, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Guid Rowguid
		{
			get { return (System.Guid)GetValue((int)ProductDescriptionFieldIndex.Rowguid, true); }
			set	{ SetValue((int)ProductDescriptionFieldIndex.Rowguid, value); }
		}

		/// <summary>Gets the EntityCollection with the related entities of type 'ProductModelProductDescriptionCultureEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(ProductModelProductDescriptionCultureEntity))]
		public virtual EntityCollection<ProductModelProductDescriptionCultureEntity> ProductModelProductDescriptionCultures { get { return GetOrCreateEntityCollection<ProductModelProductDescriptionCultureEntity, ProductModelProductDescriptionCultureEntityFactory>("ProductDescription", true, false, ref _productModelProductDescriptionCultures); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CultureEntity' which are related to this entity via a relation of type 'm:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CultureEntity))]
		public virtual EntityCollection<CultureEntity> CultureCollectionViaProductModelProductDescriptionCulture { get { return GetOrCreateEntityCollection<CultureEntity, CultureEntityFactory>("ProductDescriptions", false, true, ref _cultureCollectionViaProductModelProductDescriptionCulture); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'ProductModelEntity' which are related to this entity via a relation of type 'm:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(ProductModelEntity))]
		public virtual EntityCollection<ProductModelEntity> Models { get { return GetOrCreateEntityCollection<ProductModelEntity, ProductModelEntityFactory>("Descriptions", false, true, ref _models); } }

		// __LLBLGENPRO_USER_CODE_REGION_START CustomEntityCode
		// __LLBLGENPRO_USER_CODE_REGION_END

	}
}

namespace AW.Dal
{
	public enum ProductDescriptionFieldIndex
	{
		///<summary>Description. </summary>
		Description,
		///<summary>ModifiedDate. </summary>
		ModifiedDate,
		///<summary>ProductDescriptionID. </summary>
		ProductDescriptionID,
		///<summary>Rowguid. </summary>
		Rowguid,
		/// <summary></summary>
		AmountOfFields
	}
}

namespace AW.Dal.RelationClasses
{
	/// <summary>Implements the relations factory for the entity: ProductDescription. </summary>
	public partial class ProductDescriptionRelations: RelationFactory
	{
		/// <summary>Returns a new IEntityRelation object, between ProductDescriptionEntity and ProductModelProductDescriptionCultureEntity over the 1:n relation they have, using the relation between the fields: ProductDescription.ProductDescriptionID - ProductModelProductDescriptionCulture.ProductDescriptionID</summary>
		public virtual IEntityRelation ProductModelProductDescriptionCultureEntityUsingProductDescriptionID
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "ProductModelProductDescriptionCultures", true, new[] { ProductDescriptionFields.ProductDescriptionID, ProductModelProductDescriptionCultureFields.ProductDescriptionID }); }
		}

	}
	
	/// <summary>Static class which is used for providing relationship instances which are re-used internally for syncing</summary>
	internal static class StaticProductDescriptionRelations
	{
		internal static readonly IEntityRelation ProductModelProductDescriptionCultureEntityUsingProductDescriptionIDStatic = new ProductDescriptionRelations().ProductModelProductDescriptionCultureEntityUsingProductDescriptionID;

		/// <summary>CTor</summary>
		static StaticProductDescriptionRelations() { }
	}
}
