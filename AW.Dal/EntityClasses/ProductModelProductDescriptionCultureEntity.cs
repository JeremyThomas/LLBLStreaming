//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro 5.9.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using System.ComponentModel;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using AW.Dal.HelperClasses;
using AW.Dal.FactoryClasses;
using AW.Dal.RelationClasses;
using System.ComponentModel.DataAnnotations;
using SD.LLBLGen.Pro.ORMSupportClasses;

namespace AW.Dal.EntityClasses
{
	// __LLBLGENPRO_USER_CODE_REGION_START AdditionalNamespaces
	// __LLBLGENPRO_USER_CODE_REGION_END
	/// <summary>Entity class which represents the entity 'ProductModelProductDescriptionCulture'.<br/><br/>MS_Description: Cross-reference table mapping product descriptions and the language the description is written in.<br/></summary>
	[Serializable]
	public partial class ProductModelProductDescriptionCultureEntity : CommonEntityBase
		// __LLBLGENPRO_USER_CODE_REGION_START AdditionalInterfaces
		// __LLBLGENPRO_USER_CODE_REGION_END	
	{
		private CultureEntity _culture;
		private ProductDescriptionEntity _productDescription;
		private ProductModelEntity _productModel;

		// __LLBLGENPRO_USER_CODE_REGION_START PrivateMembers
		// __LLBLGENPRO_USER_CODE_REGION_END
		private static Dictionary<string, string>	_customProperties;
		private static Dictionary<string, Dictionary<string, string>>	_fieldsCustomProperties;
		private static ProductModelProductDescriptionCultureEntityStaticMetaData _staticMetaData = new ProductModelProductDescriptionCultureEntityStaticMetaData();
		private static ProductModelProductDescriptionCultureRelations _relationsFactory = new ProductModelProductDescriptionCultureRelations();

		/// <summary>All names of fields mapped onto a relation. Usable for in-memory filtering</summary>
		public static partial class MemberNames
		{
			/// <summary>Member name Culture</summary>
			public static readonly string Culture = "Culture";
			/// <summary>Member name ProductDescription</summary>
			public static readonly string ProductDescription = "ProductDescription";
			/// <summary>Member name ProductModel</summary>
			public static readonly string ProductModel = "ProductModel";
		}

		/// <summary>Static meta-data storage for navigator related information</summary>
		protected class ProductModelProductDescriptionCultureEntityStaticMetaData : EntityStaticMetaDataBase
		{
			public ProductModelProductDescriptionCultureEntityStaticMetaData()
			{
				SetEntityCoreInfo("ProductModelProductDescriptionCultureEntity", InheritanceHierarchyType.None, false, (int)AW.Dal.EntityType.ProductModelProductDescriptionCultureEntity, typeof(ProductModelProductDescriptionCultureEntity), typeof(ProductModelProductDescriptionCultureEntityFactory), false);
				AddNavigatorMetaData<ProductModelProductDescriptionCultureEntity, CultureEntity>("Culture", "ProductModelProductDescriptionCultures", (a, b) => a._culture = b, a => a._culture, (a, b) => a.Culture = b, AW.Dal.RelationClasses.StaticProductModelProductDescriptionCultureRelations.CultureEntityUsingCultureIDStatic, ()=>new ProductModelProductDescriptionCultureRelations().CultureEntityUsingCultureID, null, new int[] { (int)ProductModelProductDescriptionCultureFieldIndex.CultureID }, null, true, (int)AW.Dal.EntityType.CultureEntity);
				AddNavigatorMetaData<ProductModelProductDescriptionCultureEntity, ProductDescriptionEntity>("ProductDescription", "ProductModelProductDescriptionCultures", (a, b) => a._productDescription = b, a => a._productDescription, (a, b) => a.ProductDescription = b, AW.Dal.RelationClasses.StaticProductModelProductDescriptionCultureRelations.ProductDescriptionEntityUsingProductDescriptionIDStatic, ()=>new ProductModelProductDescriptionCultureRelations().ProductDescriptionEntityUsingProductDescriptionID, null, new int[] { (int)ProductModelProductDescriptionCultureFieldIndex.ProductDescriptionID }, null, true, (int)AW.Dal.EntityType.ProductDescriptionEntity);
				AddNavigatorMetaData<ProductModelProductDescriptionCultureEntity, ProductModelEntity>("ProductModel", "ProductModelProductDescriptionCultures", (a, b) => a._productModel = b, a => a._productModel, (a, b) => a.ProductModel = b, AW.Dal.RelationClasses.StaticProductModelProductDescriptionCultureRelations.ProductModelEntityUsingProductModelIDStatic, ()=>new ProductModelProductDescriptionCultureRelations().ProductModelEntityUsingProductModelID, null, new int[] { (int)ProductModelProductDescriptionCultureFieldIndex.ProductModelID }, null, true, (int)AW.Dal.EntityType.ProductModelEntity);
			}
		}

		/// <summary>Static ctor</summary>
		static ProductModelProductDescriptionCultureEntity()
		{
			SetupCustomPropertyHashtables();
		}

		/// <summary> CTor</summary>
		public ProductModelProductDescriptionCultureEntity()
		{
			InitClassEmpty(null, null);
		}

		/// <summary> CTor</summary>
		/// <param name="fields">Fields object to set as the fields for this entity.</param>
		public ProductModelProductDescriptionCultureEntity(IEntityFields2 fields)
		{
			InitClassEmpty(null, fields);
		}

		/// <summary> CTor</summary>
		/// <param name="validator">The custom validator object for this ProductModelProductDescriptionCultureEntity</param>
		public ProductModelProductDescriptionCultureEntity(IValidator validator)
		{
			InitClassEmpty(validator, null);
		}

		/// <summary> CTor</summary>
		/// <param name="cultureID">PK value for ProductModelProductDescriptionCulture which data should be fetched into this ProductModelProductDescriptionCulture object</param>
		/// <param name="productDescriptionID">PK value for ProductModelProductDescriptionCulture which data should be fetched into this ProductModelProductDescriptionCulture object</param>
		/// <param name="productModelID">PK value for ProductModelProductDescriptionCulture which data should be fetched into this ProductModelProductDescriptionCulture object</param>
		public ProductModelProductDescriptionCultureEntity(System.String cultureID, System.Int32 productDescriptionID, System.Int32 productModelID) : this(cultureID, productDescriptionID, productModelID, null)
		{
		}

		/// <summary> CTor</summary>
		/// <param name="cultureID">PK value for ProductModelProductDescriptionCulture which data should be fetched into this ProductModelProductDescriptionCulture object</param>
		/// <param name="productDescriptionID">PK value for ProductModelProductDescriptionCulture which data should be fetched into this ProductModelProductDescriptionCulture object</param>
		/// <param name="productModelID">PK value for ProductModelProductDescriptionCulture which data should be fetched into this ProductModelProductDescriptionCulture object</param>
		/// <param name="validator">The custom validator object for this ProductModelProductDescriptionCultureEntity</param>
		public ProductModelProductDescriptionCultureEntity(System.String cultureID, System.Int32 productDescriptionID, System.Int32 productModelID, IValidator validator)
		{
			InitClassEmpty(validator, null);
			this.CultureID = cultureID;
			this.ProductDescriptionID = productDescriptionID;
			this.ProductModelID = productModelID;
		}

		/// <summary>Private CTor for deserialization</summary>
		/// <param name="info"></param>
		/// <param name="context"></param>
		protected ProductModelProductDescriptionCultureEntity(SerializationInfo info, StreamingContext context) : base(info, context)
		{
			// __LLBLGENPRO_USER_CODE_REGION_START DeserializationConstructor
			// __LLBLGENPRO_USER_CODE_REGION_END
		}

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'Culture' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCulture() { return CreateRelationInfoForNavigator("Culture"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'ProductDescription' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoProductDescription() { return CreateRelationInfoForNavigator("ProductDescription"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'ProductModel' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoProductModel() { return CreateRelationInfoForNavigator("ProductModel"); }
		
		/// <inheritdoc/>
		protected override EntityStaticMetaDataBase GetEntityStaticMetaData() {	return _staticMetaData; }

		/// <summary>Initializes the class members</summary>
		private void InitClassMembers()
		{
			PerformDependencyInjection();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassMembers
			// __LLBLGENPRO_USER_CODE_REGION_END
			OnInitClassMembersComplete();
		}

		/// <summary>Initializes the hashtables for the entity type and entity field custom properties. </summary>
		private static void SetupCustomPropertyHashtables()
		{
			_customProperties = new Dictionary<string, string>();
			_customProperties.Add("MS_Description", @"Cross-reference table mapping product descriptions and the language the description is written in.");
			_fieldsCustomProperties = new Dictionary<string, Dictionary<string, string>>();
			Dictionary<string, string> fieldHashtable;
			fieldHashtable = new Dictionary<string, string>();
			fieldHashtable.Add("MS_Description", @"Culture identification number. Foreign key to Culture.CultureID.");
			_fieldsCustomProperties.Add("CultureID", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();
			fieldHashtable.Add("MS_Description", @"Date and time the record was last updated.");
			_fieldsCustomProperties.Add("ModifiedDate", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();
			fieldHashtable.Add("MS_Description", @"Primary key. Foreign key to ProductDescription.ProductDescriptionID.");
			_fieldsCustomProperties.Add("ProductDescriptionID", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();
			fieldHashtable.Add("MS_Description", @"Clustered index created by a primary key constraint.");
			_fieldsCustomProperties.Add("ProductModelID", fieldHashtable);
		}

		/// <summary>Initializes the class with empty data, as if it is a new Entity.</summary>
		/// <param name="validator">The validator object for this ProductModelProductDescriptionCultureEntity</param>
		/// <param name="fields">Fields of this entity</param>
		private void InitClassEmpty(IValidator validator, IEntityFields2 fields)
		{
			OnInitializing();
			this.Fields = fields ?? CreateFields();
			this.Validator = validator;
			InitClassMembers();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassEmpty
			// __LLBLGENPRO_USER_CODE_REGION_END

			OnInitialized();
		}

		/// <summary>The relations object holding all relations of this entity with other entity classes.</summary>
		public static ProductModelProductDescriptionCultureRelations Relations { get { return _relationsFactory; } }

		/// <summary>The custom properties for this entity type.</summary>
		/// <remarks>The data returned from this property should be considered read-only: it is not thread safe to alter this data at runtime.</remarks>
		public  static Dictionary<string, string> CustomProperties { get { return _customProperties;} }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Culture' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCulture { get { return _staticMetaData.GetPrefetchPathElement("Culture", CommonEntityBase.CreateEntityCollection<CultureEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ProductDescription' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathProductDescription { get { return _staticMetaData.GetPrefetchPathElement("ProductDescription", CommonEntityBase.CreateEntityCollection<ProductDescriptionEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ProductModel' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathProductModel { get { return _staticMetaData.GetPrefetchPathElement("ProductModel", CommonEntityBase.CreateEntityCollection<ProductModelEntity>()); } }

		/// <inheritdoc/>
		[Browsable(false), XmlIgnore]
		protected override Dictionary<string, string> CustomPropertiesOfType { get { return CustomProperties;} }

		/// <summary>The custom properties for the fields of this entity type. The returned Hashtable contains per fieldname a hashtable of name-value pairs. </summary>
		/// <remarks>The data returned from this property should be considered read-only: it is not thread safe to alter this data at runtime.</remarks>
		public  static Dictionary<string, Dictionary<string, string>> FieldsCustomProperties { get { return _fieldsCustomProperties;} }

		/// <inheritdoc/>
		[Browsable(false), XmlIgnore]
		protected override Dictionary<string, Dictionary<string, string>> FieldsCustomPropertiesOfType { get { return FieldsCustomProperties;} }

		/// <summary>The CultureID property of the Entity ProductModelProductDescriptionCulture<br/><br/>MS_Description: Culture identification number. Foreign key to Culture.CultureID.<br/>Culture identification number. Foreign key to Culture.CultureID.</summary>
		/// <remarks>Mapped on  table field: "ProductModelProductDescriptionCulture"."CultureID".<br/>Table field type characteristics (type, precision, scale, length): NChar, 0, 0, 6.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, true, false</remarks>
		public virtual System.String CultureID
		{
			get { return (System.String)GetValue((int)ProductModelProductDescriptionCultureFieldIndex.CultureID, true); }
			set	{ SetValue((int)ProductModelProductDescriptionCultureFieldIndex.CultureID, value); }
		}

		/// <summary>The ModifiedDate property of the Entity ProductModelProductDescriptionCulture<br/><br/>MS_Description: Date and time the record was last updated.<br/>Date and time the record was last updated.</summary>
		/// <remarks>Mapped on  table field: "ProductModelProductDescriptionCulture"."ModifiedDate".<br/>Table field type characteristics (type, precision, scale, length): DateTime, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.DateTime ModifiedDate
		{
			get { return (System.DateTime)GetValue((int)ProductModelProductDescriptionCultureFieldIndex.ModifiedDate, true); }
			set	{ SetValue((int)ProductModelProductDescriptionCultureFieldIndex.ModifiedDate, value); }
		}

		/// <summary>The ProductDescriptionID property of the Entity ProductModelProductDescriptionCulture<br/><br/>MS_Description: Primary key. Foreign key to ProductDescription.ProductDescriptionID.<br/>Primary key. Foreign key to ProductDescription.ProductDescriptionID.</summary>
		/// <remarks>Mapped on  table field: "ProductModelProductDescriptionCulture"."ProductDescriptionID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, true, false</remarks>
		public virtual System.Int32 ProductDescriptionID
		{
			get { return (System.Int32)GetValue((int)ProductModelProductDescriptionCultureFieldIndex.ProductDescriptionID, true); }
			set	{ SetValue((int)ProductModelProductDescriptionCultureFieldIndex.ProductDescriptionID, value); }
		}

		/// <summary>The ProductModelID property of the Entity ProductModelProductDescriptionCulture<br/><br/>MS_Description: Clustered index created by a primary key constraint.<br/>Clustered index created by a primary key constraint.</summary>
		/// <remarks>Mapped on  table field: "ProductModelProductDescriptionCulture"."ProductModelID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, true, false</remarks>
		public virtual System.Int32 ProductModelID
		{
			get { return (System.Int32)GetValue((int)ProductModelProductDescriptionCultureFieldIndex.ProductModelID, true); }
			set	{ SetValue((int)ProductModelProductDescriptionCultureFieldIndex.ProductModelID, value); }
		}

		/// <summary>Gets / sets related entity of type 'CultureEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual CultureEntity Culture
		{
			get { return _culture; }
			set { SetSingleRelatedEntityNavigator(value, "Culture"); }
		}

		/// <summary>Gets / sets related entity of type 'ProductDescriptionEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual ProductDescriptionEntity ProductDescription
		{
			get { return _productDescription; }
			set { SetSingleRelatedEntityNavigator(value, "ProductDescription"); }
		}

		/// <summary>Gets / sets related entity of type 'ProductModelEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual ProductModelEntity ProductModel
		{
			get { return _productModel; }
			set { SetSingleRelatedEntityNavigator(value, "ProductModel"); }
		}

		// __LLBLGENPRO_USER_CODE_REGION_START CustomEntityCode
		// __LLBLGENPRO_USER_CODE_REGION_END

	}
}

namespace AW.Dal
{
	public enum ProductModelProductDescriptionCultureFieldIndex
	{
		///<summary>CultureID. </summary>
		CultureID,
		///<summary>ModifiedDate. </summary>
		ModifiedDate,
		///<summary>ProductDescriptionID. </summary>
		ProductDescriptionID,
		///<summary>ProductModelID. </summary>
		ProductModelID,
		/// <summary></summary>
		AmountOfFields
	}
}

namespace AW.Dal.RelationClasses
{
	/// <summary>Implements the relations factory for the entity: ProductModelProductDescriptionCulture. </summary>
	public partial class ProductModelProductDescriptionCultureRelations: RelationFactory
	{

		/// <summary>Returns a new IEntityRelation object, between ProductModelProductDescriptionCultureEntity and CultureEntity over the m:1 relation they have, using the relation between the fields: ProductModelProductDescriptionCulture.CultureID - Culture.CultureID</summary>
		public virtual IEntityRelation CultureEntityUsingCultureID
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "Culture", false, new[] { CultureFields.CultureID, ProductModelProductDescriptionCultureFields.CultureID }); }
		}

		/// <summary>Returns a new IEntityRelation object, between ProductModelProductDescriptionCultureEntity and ProductDescriptionEntity over the m:1 relation they have, using the relation between the fields: ProductModelProductDescriptionCulture.ProductDescriptionID - ProductDescription.ProductDescriptionID</summary>
		public virtual IEntityRelation ProductDescriptionEntityUsingProductDescriptionID
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "ProductDescription", false, new[] { ProductDescriptionFields.ProductDescriptionID, ProductModelProductDescriptionCultureFields.ProductDescriptionID }); }
		}

		/// <summary>Returns a new IEntityRelation object, between ProductModelProductDescriptionCultureEntity and ProductModelEntity over the m:1 relation they have, using the relation between the fields: ProductModelProductDescriptionCulture.ProductModelID - ProductModel.ProductModelID</summary>
		public virtual IEntityRelation ProductModelEntityUsingProductModelID
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "ProductModel", false, new[] { ProductModelFields.ProductModelID, ProductModelProductDescriptionCultureFields.ProductModelID }); }
		}

	}
	
	/// <summary>Static class which is used for providing relationship instances which are re-used internally for syncing</summary>
	internal static class StaticProductModelProductDescriptionCultureRelations
	{
		internal static readonly IEntityRelation CultureEntityUsingCultureIDStatic = new ProductModelProductDescriptionCultureRelations().CultureEntityUsingCultureID;
		internal static readonly IEntityRelation ProductDescriptionEntityUsingProductDescriptionIDStatic = new ProductModelProductDescriptionCultureRelations().ProductDescriptionEntityUsingProductDescriptionID;
		internal static readonly IEntityRelation ProductModelEntityUsingProductModelIDStatic = new ProductModelProductDescriptionCultureRelations().ProductModelEntityUsingProductModelID;

		/// <summary>CTor</summary>
		static StaticProductModelProductDescriptionCultureRelations() { }
	}
}
