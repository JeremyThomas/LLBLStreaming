//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro 5.9.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using System.ComponentModel;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using AW.Dal.HelperClasses;
using AW.Dal.FactoryClasses;
using AW.Dal.RelationClasses;
using System.ComponentModel.DataAnnotations;
using SD.LLBLGen.Pro.ORMSupportClasses;

namespace AW.Dal.EntityClasses
{
	// __LLBLGENPRO_USER_CODE_REGION_START AdditionalNamespaces
	// __LLBLGENPRO_USER_CODE_REGION_END
	/// <summary>Entity class which represents the entity 'PurchaseOrderDetail'.<br/><br/>MS_Description: Individual products associated with a specific purchase order. See PurchaseOrderHeader.<br/></summary>
	[Serializable]
	public partial class PurchaseOrderDetailEntity : CommonEntityBase
		// __LLBLGENPRO_USER_CODE_REGION_START AdditionalInterfaces
		// __LLBLGENPRO_USER_CODE_REGION_END	
	{
		private ProductEntity _product;
		private PurchaseOrderHeaderEntity _purchaseOrderHeader;
		private PurchaseOrderHistoryEntity _purchaseOrderHistory;

		// __LLBLGENPRO_USER_CODE_REGION_START PrivateMembers
		// __LLBLGENPRO_USER_CODE_REGION_END
		private static Dictionary<string, string>	_customProperties;
		private static Dictionary<string, Dictionary<string, string>>	_fieldsCustomProperties;
		private static PurchaseOrderDetailEntityStaticMetaData _staticMetaData = new PurchaseOrderDetailEntityStaticMetaData();
		private static PurchaseOrderDetailRelations _relationsFactory = new PurchaseOrderDetailRelations();

		/// <summary>All names of fields mapped onto a relation. Usable for in-memory filtering</summary>
		public static partial class MemberNames
		{
			/// <summary>Member name Product</summary>
			public static readonly string Product = "Product";
			/// <summary>Member name PurchaseOrderHeader</summary>
			public static readonly string PurchaseOrderHeader = "PurchaseOrderHeader";
			/// <summary>Member name PurchaseOrderHistory</summary>
			public static readonly string PurchaseOrderHistory = "PurchaseOrderHistory";
		}

		/// <summary>Static meta-data storage for navigator related information</summary>
		protected class PurchaseOrderDetailEntityStaticMetaData : EntityStaticMetaDataBase
		{
			public PurchaseOrderDetailEntityStaticMetaData()
			{
				SetEntityCoreInfo("PurchaseOrderDetailEntity", InheritanceHierarchyType.None, false, (int)AW.Dal.EntityType.PurchaseOrderDetailEntity, typeof(PurchaseOrderDetailEntity), typeof(PurchaseOrderDetailEntityFactory), false);
				AddNavigatorMetaData<PurchaseOrderDetailEntity, ProductEntity>("Product", "PurchaseOrderDetails", (a, b) => a._product = b, a => a._product, (a, b) => a.Product = b, AW.Dal.RelationClasses.StaticPurchaseOrderDetailRelations.ProductEntityUsingProductIDStatic, ()=>new PurchaseOrderDetailRelations().ProductEntityUsingProductID, null, new int[] { (int)PurchaseOrderDetailFieldIndex.ProductID }, null, true, (int)AW.Dal.EntityType.ProductEntity);
				AddNavigatorMetaData<PurchaseOrderDetailEntity, PurchaseOrderHeaderEntity>("PurchaseOrderHeader", "PurchaseOrderDetails", (a, b) => a._purchaseOrderHeader = b, a => a._purchaseOrderHeader, (a, b) => a.PurchaseOrderHeader = b, AW.Dal.RelationClasses.StaticPurchaseOrderDetailRelations.PurchaseOrderHeaderEntityUsingPurchaseOrderIDStatic, ()=>new PurchaseOrderDetailRelations().PurchaseOrderHeaderEntityUsingPurchaseOrderID, null, new int[] { (int)PurchaseOrderDetailFieldIndex.PurchaseOrderID }, null, true, (int)AW.Dal.EntityType.PurchaseOrderHeaderEntity);
				AddNavigatorMetaData<PurchaseOrderDetailEntity, PurchaseOrderHistoryEntity>("PurchaseOrderHistory", "PurchaseOrderDetail", (a, b) => a._purchaseOrderHistory = b, a => a._purchaseOrderHistory, (a, b) => a.PurchaseOrderHistory = b, AW.Dal.RelationClasses.StaticPurchaseOrderDetailRelations.PurchaseOrderHistoryEntityUsingReferenceOrderLineIDReferenceOrderIDStatic, ()=>new PurchaseOrderDetailRelations().PurchaseOrderHistoryEntityUsingReferenceOrderLineIDReferenceOrderID, null, null, null, true, (int)AW.Dal.EntityType.PurchaseOrderHistoryEntity);
			}
		}

		/// <summary>Static ctor</summary>
		static PurchaseOrderDetailEntity()
		{
			SetupCustomPropertyHashtables();
		}

		/// <summary> CTor</summary>
		public PurchaseOrderDetailEntity()
		{
			InitClassEmpty(null, null);
		}

		/// <summary> CTor</summary>
		/// <param name="fields">Fields object to set as the fields for this entity.</param>
		public PurchaseOrderDetailEntity(IEntityFields2 fields)
		{
			InitClassEmpty(null, fields);
		}

		/// <summary> CTor</summary>
		/// <param name="validator">The custom validator object for this PurchaseOrderDetailEntity</param>
		public PurchaseOrderDetailEntity(IValidator validator)
		{
			InitClassEmpty(validator, null);
		}

		/// <summary> CTor</summary>
		/// <param name="purchaseOrderDetailID">PK value for PurchaseOrderDetail which data should be fetched into this PurchaseOrderDetail object</param>
		/// <param name="purchaseOrderID">PK value for PurchaseOrderDetail which data should be fetched into this PurchaseOrderDetail object</param>
		public PurchaseOrderDetailEntity(System.Int32 purchaseOrderDetailID, System.Int32 purchaseOrderID) : this(purchaseOrderDetailID, purchaseOrderID, null)
		{
		}

		/// <summary> CTor</summary>
		/// <param name="purchaseOrderDetailID">PK value for PurchaseOrderDetail which data should be fetched into this PurchaseOrderDetail object</param>
		/// <param name="purchaseOrderID">PK value for PurchaseOrderDetail which data should be fetched into this PurchaseOrderDetail object</param>
		/// <param name="validator">The custom validator object for this PurchaseOrderDetailEntity</param>
		public PurchaseOrderDetailEntity(System.Int32 purchaseOrderDetailID, System.Int32 purchaseOrderID, IValidator validator)
		{
			InitClassEmpty(validator, null);
			this.PurchaseOrderDetailID = purchaseOrderDetailID;
			this.PurchaseOrderID = purchaseOrderID;
		}

		/// <summary>Private CTor for deserialization</summary>
		/// <param name="info"></param>
		/// <param name="context"></param>
		protected PurchaseOrderDetailEntity(SerializationInfo info, StreamingContext context) : base(info, context)
		{
			// __LLBLGENPRO_USER_CODE_REGION_START DeserializationConstructor
			// __LLBLGENPRO_USER_CODE_REGION_END
		}

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'Product' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoProduct() { return CreateRelationInfoForNavigator("Product"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'PurchaseOrderHeader' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoPurchaseOrderHeader() { return CreateRelationInfoForNavigator("PurchaseOrderHeader"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'PurchaseOrderHistory' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoPurchaseOrderHistory() { return CreateRelationInfoForNavigator("PurchaseOrderHistory"); }
		
		/// <inheritdoc/>
		protected override EntityStaticMetaDataBase GetEntityStaticMetaData() {	return _staticMetaData; }

		/// <summary>Initializes the class members</summary>
		private void InitClassMembers()
		{
			PerformDependencyInjection();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassMembers
			// __LLBLGENPRO_USER_CODE_REGION_END
			OnInitClassMembersComplete();
		}

		/// <summary>Initializes the hashtables for the entity type and entity field custom properties. </summary>
		private static void SetupCustomPropertyHashtables()
		{
			_customProperties = new Dictionary<string, string>();
			_customProperties.Add("MS_Description", @"Individual products associated with a specific purchase order. See PurchaseOrderHeader.");
			_fieldsCustomProperties = new Dictionary<string, Dictionary<string, string>>();
			Dictionary<string, string> fieldHashtable;
			fieldHashtable = new Dictionary<string, string>();
			fieldHashtable.Add("MS_Description", @"Date the product is expected to be received.");
			_fieldsCustomProperties.Add("DueDate", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();
			fieldHashtable.Add("MS_Description", @"Per product subtotal. Computed as OrderQty * UnitPrice.");
			_fieldsCustomProperties.Add("LineTotal", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();
			fieldHashtable.Add("MS_Description", @"Date and time the record was last updated.");
			_fieldsCustomProperties.Add("ModifiedDate", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();
			fieldHashtable.Add("MS_Description", @"Quantity ordered.");
			_fieldsCustomProperties.Add("OrderQuantity", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();
			fieldHashtable.Add("MS_Description", @"Product identification number. Foreign key to Product.ProductID.");
			_fieldsCustomProperties.Add("ProductID", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();
			fieldHashtable.Add("MS_Description", @"Primary key. One line number per purchased product.");
			_fieldsCustomProperties.Add("PurchaseOrderDetailID", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();
			fieldHashtable.Add("MS_Description", @"Clustered index created by a primary key constraint.");
			_fieldsCustomProperties.Add("PurchaseOrderID", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();
			fieldHashtable.Add("MS_Description", @"Quantity actually received from the vendor.");
			_fieldsCustomProperties.Add("ReceivedQuantity", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();
			fieldHashtable.Add("MS_Description", @"Quantity rejected during inspection.");
			_fieldsCustomProperties.Add("RejectedQuantity", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();
			fieldHashtable.Add("MS_Description", @"Quantity accepted into inventory. Computed as ReceivedQty - RejectedQty.");
			_fieldsCustomProperties.Add("StockedQuantity", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();
			fieldHashtable.Add("MS_Description", @"Vendor's selling price of a single product.");
			_fieldsCustomProperties.Add("UnitPrice", fieldHashtable);
		}

		/// <summary>Initializes the class with empty data, as if it is a new Entity.</summary>
		/// <param name="validator">The validator object for this PurchaseOrderDetailEntity</param>
		/// <param name="fields">Fields of this entity</param>
		private void InitClassEmpty(IValidator validator, IEntityFields2 fields)
		{
			OnInitializing();
			this.Fields = fields ?? CreateFields();
			this.Validator = validator;
			InitClassMembers();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassEmpty
			// __LLBLGENPRO_USER_CODE_REGION_END

			OnInitialized();
		}

		/// <summary>The relations object holding all relations of this entity with other entity classes.</summary>
		public static PurchaseOrderDetailRelations Relations { get { return _relationsFactory; } }

		/// <summary>The custom properties for this entity type.</summary>
		/// <remarks>The data returned from this property should be considered read-only: it is not thread safe to alter this data at runtime.</remarks>
		public  static Dictionary<string, string> CustomProperties { get { return _customProperties;} }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Product' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathProduct { get { return _staticMetaData.GetPrefetchPathElement("Product", CommonEntityBase.CreateEntityCollection<ProductEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'PurchaseOrderHeader' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathPurchaseOrderHeader { get { return _staticMetaData.GetPrefetchPathElement("PurchaseOrderHeader", CommonEntityBase.CreateEntityCollection<PurchaseOrderHeaderEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'PurchaseOrderHistory' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathPurchaseOrderHistory { get { return _staticMetaData.GetPrefetchPathElement("PurchaseOrderHistory", CommonEntityBase.CreateEntityCollection<PurchaseOrderHistoryEntity>()); } }

		/// <inheritdoc/>
		[Browsable(false), XmlIgnore]
		protected override Dictionary<string, string> CustomPropertiesOfType { get { return CustomProperties;} }

		/// <summary>The custom properties for the fields of this entity type. The returned Hashtable contains per fieldname a hashtable of name-value pairs. </summary>
		/// <remarks>The data returned from this property should be considered read-only: it is not thread safe to alter this data at runtime.</remarks>
		public  static Dictionary<string, Dictionary<string, string>> FieldsCustomProperties { get { return _fieldsCustomProperties;} }

		/// <inheritdoc/>
		[Browsable(false), XmlIgnore]
		protected override Dictionary<string, Dictionary<string, string>> FieldsCustomPropertiesOfType { get { return FieldsCustomProperties;} }

		/// <summary>The DueDate property of the Entity PurchaseOrderDetail<br/><br/>MS_Description: Date the product is expected to be received.<br/>Date the product is expected to be received.</summary>
		/// <remarks>Mapped on  table field: "PurchaseOrderDetail"."DueDate".<br/>Table field type characteristics (type, precision, scale, length): DateTime, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.DateTime DueDate
		{
			get { return (System.DateTime)GetValue((int)PurchaseOrderDetailFieldIndex.DueDate, true); }
			set	{ SetValue((int)PurchaseOrderDetailFieldIndex.DueDate, value); }
		}

		/// <summary>The LineTotal property of the Entity PurchaseOrderDetail<br/><br/>MS_Description: Per product subtotal. Computed as OrderQty * UnitPrice.<br/>Per product subtotal. Computed as OrderQty * UnitPrice.</summary>
		/// <remarks>Mapped on  table field: "PurchaseOrderDetail"."LineTotal".<br/>Table field type characteristics (type, precision, scale, length): Money, 19, 4, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Decimal LineTotal
		{
			get { return (System.Decimal)GetValue((int)PurchaseOrderDetailFieldIndex.LineTotal, true); }
		}

		/// <summary>The ModifiedDate property of the Entity PurchaseOrderDetail<br/><br/>MS_Description: Date and time the record was last updated.<br/>Date and time the record was last updated.</summary>
		/// <remarks>Mapped on  table field: "PurchaseOrderDetail"."ModifiedDate".<br/>Table field type characteristics (type, precision, scale, length): DateTime, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.DateTime ModifiedDate
		{
			get { return (System.DateTime)GetValue((int)PurchaseOrderDetailFieldIndex.ModifiedDate, true); }
			set	{ SetValue((int)PurchaseOrderDetailFieldIndex.ModifiedDate, value); }
		}

		/// <summary>The OrderQuantity property of the Entity PurchaseOrderDetail<br/><br/>MS_Description: Quantity ordered.<br/>Quantity ordered.</summary>
		/// <remarks>Mapped on  table field: "PurchaseOrderDetail"."OrderQty".<br/>Table field type characteristics (type, precision, scale, length): SmallInt, 5, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Int16 OrderQuantity
		{
			get { return (System.Int16)GetValue((int)PurchaseOrderDetailFieldIndex.OrderQuantity, true); }
			set	{ SetValue((int)PurchaseOrderDetailFieldIndex.OrderQuantity, value); }
		}

		/// <summary>The ProductID property of the Entity PurchaseOrderDetail<br/><br/>MS_Description: Product identification number. Foreign key to Product.ProductID.<br/>Product identification number. Foreign key to Product.ProductID.</summary>
		/// <remarks>Mapped on  table field: "PurchaseOrderDetail"."ProductID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Int32 ProductID
		{
			get { return (System.Int32)GetValue((int)PurchaseOrderDetailFieldIndex.ProductID, true); }
			set	{ SetValue((int)PurchaseOrderDetailFieldIndex.ProductID, value); }
		}

		/// <summary>The PurchaseOrderDetailID property of the Entity PurchaseOrderDetail<br/><br/>MS_Description: Primary key. One line number per purchased product.<br/>Primary key. One line number per purchased product.</summary>
		/// <remarks>Mapped on  table field: "PurchaseOrderDetail"."PurchaseOrderDetailID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, true, true</remarks>
		public virtual System.Int32 PurchaseOrderDetailID
		{
			get { return (System.Int32)GetValue((int)PurchaseOrderDetailFieldIndex.PurchaseOrderDetailID, true); }
			set { SetValue((int)PurchaseOrderDetailFieldIndex.PurchaseOrderDetailID, value); }		}

		/// <summary>The PurchaseOrderID property of the Entity PurchaseOrderDetail<br/><br/>MS_Description: Clustered index created by a primary key constraint.<br/>Clustered index created by a primary key constraint.</summary>
		/// <remarks>Mapped on  table field: "PurchaseOrderDetail"."PurchaseOrderID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, true, false</remarks>
		public virtual System.Int32 PurchaseOrderID
		{
			get { return (System.Int32)GetValue((int)PurchaseOrderDetailFieldIndex.PurchaseOrderID, true); }
			set	{ SetValue((int)PurchaseOrderDetailFieldIndex.PurchaseOrderID, value); }
		}

		/// <summary>The ReceivedQuantity property of the Entity PurchaseOrderDetail<br/><br/>MS_Description: Quantity actually received from the vendor.<br/>Quantity actually received from the vendor.</summary>
		/// <remarks>Mapped on  table field: "PurchaseOrderDetail"."ReceivedQty".<br/>Table field type characteristics (type, precision, scale, length): Decimal, 8, 2, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Decimal ReceivedQuantity
		{
			get { return (System.Decimal)GetValue((int)PurchaseOrderDetailFieldIndex.ReceivedQuantity, true); }
			set	{ SetValue((int)PurchaseOrderDetailFieldIndex.ReceivedQuantity, value); }
		}

		/// <summary>The RejectedQuantity property of the Entity PurchaseOrderDetail<br/><br/>MS_Description: Quantity rejected during inspection.<br/>Quantity rejected during inspection.</summary>
		/// <remarks>Mapped on  table field: "PurchaseOrderDetail"."RejectedQty".<br/>Table field type characteristics (type, precision, scale, length): Decimal, 8, 2, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Decimal RejectedQuantity
		{
			get { return (System.Decimal)GetValue((int)PurchaseOrderDetailFieldIndex.RejectedQuantity, true); }
			set	{ SetValue((int)PurchaseOrderDetailFieldIndex.RejectedQuantity, value); }
		}

		/// <summary>The StockedQuantity property of the Entity PurchaseOrderDetail<br/><br/>MS_Description: Quantity accepted into inventory. Computed as ReceivedQty - RejectedQty.<br/>Quantity accepted into inventory. Computed as ReceivedQty - RejectedQty.</summary>
		/// <remarks>Mapped on  table field: "PurchaseOrderDetail"."StockedQty".<br/>Table field type characteristics (type, precision, scale, length): Decimal, 9, 2, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Decimal StockedQuantity
		{
			get { return (System.Decimal)GetValue((int)PurchaseOrderDetailFieldIndex.StockedQuantity, true); }
		}

		/// <summary>The UnitPrice property of the Entity PurchaseOrderDetail<br/><br/>MS_Description: Vendor's selling price of a single product.<br/>Vendor's selling price of a single product.</summary>
		/// <remarks>Mapped on  table field: "PurchaseOrderDetail"."UnitPrice".<br/>Table field type characteristics (type, precision, scale, length): Money, 19, 4, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Decimal UnitPrice
		{
			get { return (System.Decimal)GetValue((int)PurchaseOrderDetailFieldIndex.UnitPrice, true); }
			set	{ SetValue((int)PurchaseOrderDetailFieldIndex.UnitPrice, value); }
		}

		/// <summary>Gets / sets related entity of type 'ProductEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual ProductEntity Product
		{
			get { return _product; }
			set { SetSingleRelatedEntityNavigator(value, "Product"); }
		}

		/// <summary>Gets / sets related entity of type 'PurchaseOrderHeaderEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual PurchaseOrderHeaderEntity PurchaseOrderHeader
		{
			get { return _purchaseOrderHeader; }
			set { SetSingleRelatedEntityNavigator(value, "PurchaseOrderHeader"); }
		}

		/// <summary>Gets / sets related entity of type 'PurchaseOrderHistoryEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned.<br/><br/></summary>
		[Browsable(false)]
		public virtual PurchaseOrderHistoryEntity PurchaseOrderHistory
		{
			get { return _purchaseOrderHistory; }
			set { SetSingleRelatedEntityNavigator(value, "PurchaseOrderHistory"); }
		}

		// __LLBLGENPRO_USER_CODE_REGION_START CustomEntityCode
		// __LLBLGENPRO_USER_CODE_REGION_END

	}
}

namespace AW.Dal
{
	public enum PurchaseOrderDetailFieldIndex
	{
		///<summary>DueDate. </summary>
		DueDate,
		///<summary>LineTotal. </summary>
		LineTotal,
		///<summary>ModifiedDate. </summary>
		ModifiedDate,
		///<summary>OrderQuantity. </summary>
		OrderQuantity,
		///<summary>ProductID. </summary>
		ProductID,
		///<summary>PurchaseOrderDetailID. </summary>
		PurchaseOrderDetailID,
		///<summary>PurchaseOrderID. </summary>
		PurchaseOrderID,
		///<summary>ReceivedQuantity. </summary>
		ReceivedQuantity,
		///<summary>RejectedQuantity. </summary>
		RejectedQuantity,
		///<summary>StockedQuantity. </summary>
		StockedQuantity,
		///<summary>UnitPrice. </summary>
		UnitPrice,
		/// <summary></summary>
		AmountOfFields
	}
}

namespace AW.Dal.RelationClasses
{
	/// <summary>Implements the relations factory for the entity: PurchaseOrderDetail. </summary>
	public partial class PurchaseOrderDetailRelations: RelationFactory
	{

		/// <summary>Returns a new IEntityRelation object, between PurchaseOrderDetailEntity and PurchaseOrderHistoryEntity over the 1:1 relation they have, using the relation between the fields: PurchaseOrderDetail.PurchaseOrderDetailID - PurchaseOrderHistory.ReferenceOrderLineID, PurchaseOrderDetail.PurchaseOrderID - PurchaseOrderHistory.ReferenceOrderID</summary>
		public virtual IEntityRelation PurchaseOrderHistoryEntityUsingReferenceOrderLineIDReferenceOrderID
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToOne, "PurchaseOrderHistory", true, new[] { PurchaseOrderDetailFields.PurchaseOrderDetailID, PurchaseOrderHistoryFields.ReferenceOrderLineID, PurchaseOrderDetailFields.PurchaseOrderID, PurchaseOrderHistoryFields.ReferenceOrderID }); }
		}

		/// <summary>Returns a new IEntityRelation object, between PurchaseOrderDetailEntity and ProductEntity over the m:1 relation they have, using the relation between the fields: PurchaseOrderDetail.ProductID - Product.ProductID</summary>
		public virtual IEntityRelation ProductEntityUsingProductID
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "Product", false, new[] { ProductFields.ProductID, PurchaseOrderDetailFields.ProductID }); }
		}

		/// <summary>Returns a new IEntityRelation object, between PurchaseOrderDetailEntity and PurchaseOrderHeaderEntity over the m:1 relation they have, using the relation between the fields: PurchaseOrderDetail.PurchaseOrderID - PurchaseOrderHeader.PurchaseOrderID</summary>
		public virtual IEntityRelation PurchaseOrderHeaderEntityUsingPurchaseOrderID
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "PurchaseOrderHeader", false, new[] { PurchaseOrderHeaderFields.PurchaseOrderID, PurchaseOrderDetailFields.PurchaseOrderID }); }
		}

	}
	
	/// <summary>Static class which is used for providing relationship instances which are re-used internally for syncing</summary>
	internal static class StaticPurchaseOrderDetailRelations
	{
		internal static readonly IEntityRelation PurchaseOrderHistoryEntityUsingReferenceOrderLineIDReferenceOrderIDStatic = new PurchaseOrderDetailRelations().PurchaseOrderHistoryEntityUsingReferenceOrderLineIDReferenceOrderID;
		internal static readonly IEntityRelation ProductEntityUsingProductIDStatic = new PurchaseOrderDetailRelations().ProductEntityUsingProductID;
		internal static readonly IEntityRelation PurchaseOrderHeaderEntityUsingPurchaseOrderIDStatic = new PurchaseOrderDetailRelations().PurchaseOrderHeaderEntityUsingPurchaseOrderID;

		/// <summary>CTor</summary>
		static StaticPurchaseOrderDetailRelations() { }
	}
}
