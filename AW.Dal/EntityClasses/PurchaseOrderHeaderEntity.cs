//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro 5.9.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using System.ComponentModel;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using AW.Dal.HelperClasses;
using AW.Dal.FactoryClasses;
using AW.Dal.RelationClasses;
using System.ComponentModel.DataAnnotations;
using SD.LLBLGen.Pro.ORMSupportClasses;

namespace AW.Dal.EntityClasses
{
	// __LLBLGENPRO_USER_CODE_REGION_START AdditionalNamespaces
	// __LLBLGENPRO_USER_CODE_REGION_END
	/// <summary>Entity class which represents the entity 'PurchaseOrderHeader'.<br/><br/>MS_Description: General purchase order information. See PurchaseOrderDetail.<br/></summary>
	[Serializable]
	public partial class PurchaseOrderHeaderEntity : CommonEntityBase
		// __LLBLGENPRO_USER_CODE_REGION_START AdditionalInterfaces
		// __LLBLGENPRO_USER_CODE_REGION_END	
	{
		private EntityCollection<PurchaseOrderHistoryEntity> _purchaseOrderHistories;
		private EntityCollection<PurchaseOrderDetailEntity> _purchaseOrderDetails;
		private EmployeeEntity _employee;
		private ShipMethodEntity _shipMethod;
		private VendorEntity _vendor;

		// __LLBLGENPRO_USER_CODE_REGION_START PrivateMembers
		// __LLBLGENPRO_USER_CODE_REGION_END
		private static Dictionary<string, string>	_customProperties;
		private static Dictionary<string, Dictionary<string, string>>	_fieldsCustomProperties;
		private static PurchaseOrderHeaderEntityStaticMetaData _staticMetaData = new PurchaseOrderHeaderEntityStaticMetaData();
		private static PurchaseOrderHeaderRelations _relationsFactory = new PurchaseOrderHeaderRelations();

		/// <summary>All names of fields mapped onto a relation. Usable for in-memory filtering</summary>
		public static partial class MemberNames
		{
			/// <summary>Member name Employee</summary>
			public static readonly string Employee = "Employee";
			/// <summary>Member name ShipMethod</summary>
			public static readonly string ShipMethod = "ShipMethod";
			/// <summary>Member name Vendor</summary>
			public static readonly string Vendor = "Vendor";
			/// <summary>Member name PurchaseOrderHistories</summary>
			public static readonly string PurchaseOrderHistories = "PurchaseOrderHistories";
			/// <summary>Member name PurchaseOrderDetails</summary>
			public static readonly string PurchaseOrderDetails = "PurchaseOrderDetails";
		}

		/// <summary>Static meta-data storage for navigator related information</summary>
		protected class PurchaseOrderHeaderEntityStaticMetaData : EntityStaticMetaDataBase
		{
			public PurchaseOrderHeaderEntityStaticMetaData()
			{
				SetEntityCoreInfo("PurchaseOrderHeaderEntity", InheritanceHierarchyType.None, false, (int)AW.Dal.EntityType.PurchaseOrderHeaderEntity, typeof(PurchaseOrderHeaderEntity), typeof(PurchaseOrderHeaderEntityFactory), false);
				AddNavigatorMetaData<PurchaseOrderHeaderEntity, EntityCollection<PurchaseOrderHistoryEntity>>("PurchaseOrderHistories", a => a._purchaseOrderHistories, (a, b) => a._purchaseOrderHistories = b, a => a.PurchaseOrderHistories, () => new PurchaseOrderHeaderRelations().PurchaseOrderHistoryEntityUsingReferenceOrderID, typeof(PurchaseOrderHistoryEntity), (int)AW.Dal.EntityType.PurchaseOrderHistoryEntity);
				AddNavigatorMetaData<PurchaseOrderHeaderEntity, EntityCollection<PurchaseOrderDetailEntity>>("PurchaseOrderDetails", a => a._purchaseOrderDetails, (a, b) => a._purchaseOrderDetails = b, a => a.PurchaseOrderDetails, () => new PurchaseOrderHeaderRelations().PurchaseOrderDetailEntityUsingPurchaseOrderID, typeof(PurchaseOrderDetailEntity), (int)AW.Dal.EntityType.PurchaseOrderDetailEntity);
				AddNavigatorMetaData<PurchaseOrderHeaderEntity, EmployeeEntity>("Employee", "PurchaseOrderHeaders", (a, b) => a._employee = b, a => a._employee, (a, b) => a.Employee = b, AW.Dal.RelationClasses.StaticPurchaseOrderHeaderRelations.EmployeeEntityUsingEmployeeIDStatic, ()=>new PurchaseOrderHeaderRelations().EmployeeEntityUsingEmployeeID, null, new int[] { (int)PurchaseOrderHeaderFieldIndex.EmployeeID }, null, true, (int)AW.Dal.EntityType.EmployeeEntity);
				AddNavigatorMetaData<PurchaseOrderHeaderEntity, ShipMethodEntity>("ShipMethod", "PurchaseOrderHeaders", (a, b) => a._shipMethod = b, a => a._shipMethod, (a, b) => a.ShipMethod = b, AW.Dal.RelationClasses.StaticPurchaseOrderHeaderRelations.ShipMethodEntityUsingShipMethodIDStatic, ()=>new PurchaseOrderHeaderRelations().ShipMethodEntityUsingShipMethodID, null, new int[] { (int)PurchaseOrderHeaderFieldIndex.ShipMethodID }, null, true, (int)AW.Dal.EntityType.ShipMethodEntity);
				AddNavigatorMetaData<PurchaseOrderHeaderEntity, VendorEntity>("Vendor", "PurchaseOrderHeaders", (a, b) => a._vendor = b, a => a._vendor, (a, b) => a.Vendor = b, AW.Dal.RelationClasses.StaticPurchaseOrderHeaderRelations.VendorEntityUsingVendorIDStatic, ()=>new PurchaseOrderHeaderRelations().VendorEntityUsingVendorID, null, new int[] { (int)PurchaseOrderHeaderFieldIndex.VendorID }, null, true, (int)AW.Dal.EntityType.VendorEntity);
			}
		}

		/// <summary>Static ctor</summary>
		static PurchaseOrderHeaderEntity()
		{
			SetupCustomPropertyHashtables();
		}

		/// <summary> CTor</summary>
		public PurchaseOrderHeaderEntity()
		{
			InitClassEmpty(null, null);
		}

		/// <summary> CTor</summary>
		/// <param name="fields">Fields object to set as the fields for this entity.</param>
		public PurchaseOrderHeaderEntity(IEntityFields2 fields)
		{
			InitClassEmpty(null, fields);
		}

		/// <summary> CTor</summary>
		/// <param name="validator">The custom validator object for this PurchaseOrderHeaderEntity</param>
		public PurchaseOrderHeaderEntity(IValidator validator)
		{
			InitClassEmpty(validator, null);
		}

		/// <summary> CTor</summary>
		/// <param name="purchaseOrderID">PK value for PurchaseOrderHeader which data should be fetched into this PurchaseOrderHeader object</param>
		public PurchaseOrderHeaderEntity(System.Int32 purchaseOrderID) : this(purchaseOrderID, null)
		{
		}

		/// <summary> CTor</summary>
		/// <param name="purchaseOrderID">PK value for PurchaseOrderHeader which data should be fetched into this PurchaseOrderHeader object</param>
		/// <param name="validator">The custom validator object for this PurchaseOrderHeaderEntity</param>
		public PurchaseOrderHeaderEntity(System.Int32 purchaseOrderID, IValidator validator)
		{
			InitClassEmpty(validator, null);
			this.PurchaseOrderID = purchaseOrderID;
		}

		/// <summary>Private CTor for deserialization</summary>
		/// <param name="info"></param>
		/// <param name="context"></param>
		protected PurchaseOrderHeaderEntity(SerializationInfo info, StreamingContext context) : base(info, context)
		{
			// __LLBLGENPRO_USER_CODE_REGION_START DeserializationConstructor
			// __LLBLGENPRO_USER_CODE_REGION_END
		}

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'PurchaseOrderHistory' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoPurchaseOrderHistories() { return CreateRelationInfoForNavigator("PurchaseOrderHistories"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'PurchaseOrderDetail' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoPurchaseOrderDetails() { return CreateRelationInfoForNavigator("PurchaseOrderDetails"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'Employee' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEmployee() { return CreateRelationInfoForNavigator("Employee"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'ShipMethod' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoShipMethod() { return CreateRelationInfoForNavigator("ShipMethod"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'Vendor' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoVendor() { return CreateRelationInfoForNavigator("Vendor"); }
		
		/// <inheritdoc/>
		protected override EntityStaticMetaDataBase GetEntityStaticMetaData() {	return _staticMetaData; }

		/// <summary>Initializes the class members</summary>
		private void InitClassMembers()
		{
			PerformDependencyInjection();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassMembers
			// __LLBLGENPRO_USER_CODE_REGION_END
			OnInitClassMembersComplete();
		}

		/// <summary>Initializes the hashtables for the entity type and entity field custom properties. </summary>
		private static void SetupCustomPropertyHashtables()
		{
			_customProperties = new Dictionary<string, string>();
			_customProperties.Add("MS_Description", @"General purchase order information. See PurchaseOrderDetail.");
			_fieldsCustomProperties = new Dictionary<string, Dictionary<string, string>>();
			Dictionary<string, string> fieldHashtable;
			fieldHashtable = new Dictionary<string, string>();
			fieldHashtable.Add("MS_Description", @"Employee who created the purchase order. Foreign key to Employee.EmployeeID.");
			_fieldsCustomProperties.Add("EmployeeID", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();
			fieldHashtable.Add("MS_Description", @"Shipping cost.");
			_fieldsCustomProperties.Add("Freight", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();
			fieldHashtable.Add("MS_Description", @"Date and time the record was last updated.");
			_fieldsCustomProperties.Add("ModifiedDate", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();
			fieldHashtable.Add("MS_Description", @"Purchase order creation date.");
			_fieldsCustomProperties.Add("OrderDate", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();
			fieldHashtable.Add("MS_Description", @"Clustered index created by a primary key constraint.");
			_fieldsCustomProperties.Add("PurchaseOrderID", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();
			fieldHashtable.Add("MS_Description", @"Incremental number to track changes to the purchase order over time.");
			_fieldsCustomProperties.Add("RevisionNumber", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();
			fieldHashtable.Add("MS_Description", @"Estimated shipment date from the vendor.");
			_fieldsCustomProperties.Add("ShipDate", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();
			fieldHashtable.Add("MS_Description", @"Shipping method. Foreign key to ShipMethod.ShipMethodID.");
			_fieldsCustomProperties.Add("ShipMethodID", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();
			fieldHashtable.Add("MS_Description", @"Nonclustered index.");
			_fieldsCustomProperties.Add("Status", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();
			fieldHashtable.Add("MS_Description", @"Purchase order subtotal. Computed as SUM(PurchaseOrderDetail.LineTotal)for the appropriate PurchaseOrderID.");
			_fieldsCustomProperties.Add("SubTotal", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();
			fieldHashtable.Add("MS_Description", @"Tax amount.");
			_fieldsCustomProperties.Add("TaxAmt", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();
			fieldHashtable.Add("MS_Description", @"Total due to vendor. Computed as Subtotal + TaxAmt + Freight.");
			_fieldsCustomProperties.Add("TotalDue", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();
			fieldHashtable.Add("MS_Description", @"Vendor with whom the purchase order is placed. Foreign key to Vendor.VendorID.");
			_fieldsCustomProperties.Add("VendorID", fieldHashtable);
		}

		/// <summary>Initializes the class with empty data, as if it is a new Entity.</summary>
		/// <param name="validator">The validator object for this PurchaseOrderHeaderEntity</param>
		/// <param name="fields">Fields of this entity</param>
		private void InitClassEmpty(IValidator validator, IEntityFields2 fields)
		{
			OnInitializing();
			this.Fields = fields ?? CreateFields();
			this.Validator = validator;
			InitClassMembers();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassEmpty
			// __LLBLGENPRO_USER_CODE_REGION_END

			OnInitialized();
		}

		/// <summary>The relations object holding all relations of this entity with other entity classes.</summary>
		public static PurchaseOrderHeaderRelations Relations { get { return _relationsFactory; } }

		/// <summary>The custom properties for this entity type.</summary>
		/// <remarks>The data returned from this property should be considered read-only: it is not thread safe to alter this data at runtime.</remarks>
		public  static Dictionary<string, string> CustomProperties { get { return _customProperties;} }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'PurchaseOrderHistory' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathPurchaseOrderHistories { get { return _staticMetaData.GetPrefetchPathElement("PurchaseOrderHistories", CommonEntityBase.CreateEntityCollection<PurchaseOrderHistoryEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'PurchaseOrderDetail' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathPurchaseOrderDetails { get { return _staticMetaData.GetPrefetchPathElement("PurchaseOrderDetails", CommonEntityBase.CreateEntityCollection<PurchaseOrderDetailEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Employee' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEmployee { get { return _staticMetaData.GetPrefetchPathElement("Employee", CommonEntityBase.CreateEntityCollection<EmployeeEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ShipMethod' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathShipMethod { get { return _staticMetaData.GetPrefetchPathElement("ShipMethod", CommonEntityBase.CreateEntityCollection<ShipMethodEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Vendor' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathVendor { get { return _staticMetaData.GetPrefetchPathElement("Vendor", CommonEntityBase.CreateEntityCollection<VendorEntity>()); } }

		/// <inheritdoc/>
		[Browsable(false), XmlIgnore]
		protected override Dictionary<string, string> CustomPropertiesOfType { get { return CustomProperties;} }

		/// <summary>The custom properties for the fields of this entity type. The returned Hashtable contains per fieldname a hashtable of name-value pairs. </summary>
		/// <remarks>The data returned from this property should be considered read-only: it is not thread safe to alter this data at runtime.</remarks>
		public  static Dictionary<string, Dictionary<string, string>> FieldsCustomProperties { get { return _fieldsCustomProperties;} }

		/// <inheritdoc/>
		[Browsable(false), XmlIgnore]
		protected override Dictionary<string, Dictionary<string, string>> FieldsCustomPropertiesOfType { get { return FieldsCustomProperties;} }

		/// <summary>The EmployeeID property of the Entity PurchaseOrderHeader<br/><br/>MS_Description: Employee who created the purchase order. Foreign key to Employee.EmployeeID.<br/>Employee who created the purchase order. Foreign key to Employee.EmployeeID.</summary>
		/// <remarks>Mapped on  table field: "PurchaseOrderHeader"."EmployeeID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Int32 EmployeeID
		{
			get { return (System.Int32)GetValue((int)PurchaseOrderHeaderFieldIndex.EmployeeID, true); }
			set	{ SetValue((int)PurchaseOrderHeaderFieldIndex.EmployeeID, value); }
		}

		/// <summary>The Freight property of the Entity PurchaseOrderHeader<br/><br/>MS_Description: Shipping cost.<br/>Shipping cost.</summary>
		/// <remarks>Mapped on  table field: "PurchaseOrderHeader"."Freight".<br/>Table field type characteristics (type, precision, scale, length): Money, 19, 4, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Decimal Freight
		{
			get { return (System.Decimal)GetValue((int)PurchaseOrderHeaderFieldIndex.Freight, true); }
			set	{ SetValue((int)PurchaseOrderHeaderFieldIndex.Freight, value); }
		}

		/// <summary>The ModifiedDate property of the Entity PurchaseOrderHeader<br/><br/>MS_Description: Date and time the record was last updated.<br/>Date and time the record was last updated.</summary>
		/// <remarks>Mapped on  table field: "PurchaseOrderHeader"."ModifiedDate".<br/>Table field type characteristics (type, precision, scale, length): DateTime, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.DateTime ModifiedDate
		{
			get { return (System.DateTime)GetValue((int)PurchaseOrderHeaderFieldIndex.ModifiedDate, true); }
			set	{ SetValue((int)PurchaseOrderHeaderFieldIndex.ModifiedDate, value); }
		}

		/// <summary>The OrderDate property of the Entity PurchaseOrderHeader<br/><br/>MS_Description: Purchase order creation date.<br/>Purchase order creation date.</summary>
		/// <remarks>Mapped on  table field: "PurchaseOrderHeader"."OrderDate".<br/>Table field type characteristics (type, precision, scale, length): DateTime, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.DateTime OrderDate
		{
			get { return (System.DateTime)GetValue((int)PurchaseOrderHeaderFieldIndex.OrderDate, true); }
			set	{ SetValue((int)PurchaseOrderHeaderFieldIndex.OrderDate, value); }
		}

		/// <summary>The PurchaseOrderID property of the Entity PurchaseOrderHeader<br/><br/>MS_Description: Clustered index created by a primary key constraint.<br/>Clustered index created by a primary key constraint.</summary>
		/// <remarks>Mapped on  table field: "PurchaseOrderHeader"."PurchaseOrderID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, true, true</remarks>
		public virtual System.Int32 PurchaseOrderID
		{
			get { return (System.Int32)GetValue((int)PurchaseOrderHeaderFieldIndex.PurchaseOrderID, true); }
			set { SetValue((int)PurchaseOrderHeaderFieldIndex.PurchaseOrderID, value); }		}

		/// <summary>The RevisionNumber property of the Entity PurchaseOrderHeader<br/><br/>MS_Description: Incremental number to track changes to the purchase order over time.<br/>Incremental number to track changes to the purchase order over time.</summary>
		/// <remarks>Mapped on  table field: "PurchaseOrderHeader"."RevisionNumber".<br/>Table field type characteristics (type, precision, scale, length): TinyInt, 3, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Byte RevisionNumber
		{
			get { return (System.Byte)GetValue((int)PurchaseOrderHeaderFieldIndex.RevisionNumber, true); }
			set	{ SetValue((int)PurchaseOrderHeaderFieldIndex.RevisionNumber, value); }
		}

		/// <summary>The ShipDate property of the Entity PurchaseOrderHeader<br/><br/>MS_Description: Estimated shipment date from the vendor.<br/>Estimated shipment date from the vendor.</summary>
		/// <remarks>Mapped on  table field: "PurchaseOrderHeader"."ShipDate".<br/>Table field type characteristics (type, precision, scale, length): DateTime, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.DateTime> ShipDate
		{
			get { return (Nullable<System.DateTime>)GetValue((int)PurchaseOrderHeaderFieldIndex.ShipDate, false); }
			set	{ SetValue((int)PurchaseOrderHeaderFieldIndex.ShipDate, value); }
		}

		/// <summary>The ShipMethodID property of the Entity PurchaseOrderHeader<br/><br/>MS_Description: Shipping method. Foreign key to ShipMethod.ShipMethodID.<br/>Shipping method. Foreign key to ShipMethod.ShipMethodID.</summary>
		/// <remarks>Mapped on  table field: "PurchaseOrderHeader"."ShipMethodID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Int32 ShipMethodID
		{
			get { return (System.Int32)GetValue((int)PurchaseOrderHeaderFieldIndex.ShipMethodID, true); }
			set	{ SetValue((int)PurchaseOrderHeaderFieldIndex.ShipMethodID, value); }
		}

		/// <summary>The Status property of the Entity PurchaseOrderHeader<br/><br/>MS_Description: Nonclustered index.<br/>Nonclustered index.</summary>
		/// <remarks>Mapped on  table field: "PurchaseOrderHeader"."Status".<br/>Table field type characteristics (type, precision, scale, length): TinyInt, 3, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual AW.Data.PurchaseOrderStatus Status
		{
			get { return (AW.Data.PurchaseOrderStatus)GetValue((int)PurchaseOrderHeaderFieldIndex.Status, true); }
			set	{ SetValue((int)PurchaseOrderHeaderFieldIndex.Status, value); }
		}

		/// <summary>The SubTotal property of the Entity PurchaseOrderHeader<br/><br/>MS_Description: Purchase order subtotal. Computed as SUM(PurchaseOrderDetail.LineTotal)for the appropriate PurchaseOrderID.<br/>Purchase order subtotal. Computed as SUM(PurchaseOrderDetail.LineTotal)for the appropriate PurchaseOrderID.</summary>
		/// <remarks>Mapped on  table field: "PurchaseOrderHeader"."SubTotal".<br/>Table field type characteristics (type, precision, scale, length): Money, 19, 4, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Decimal SubTotal
		{
			get { return (System.Decimal)GetValue((int)PurchaseOrderHeaderFieldIndex.SubTotal, true); }
			set	{ SetValue((int)PurchaseOrderHeaderFieldIndex.SubTotal, value); }
		}

		/// <summary>The TaxAmt property of the Entity PurchaseOrderHeader<br/><br/>MS_Description: Tax amount.<br/>Tax amount.</summary>
		/// <remarks>Mapped on  table field: "PurchaseOrderHeader"."TaxAmt".<br/>Table field type characteristics (type, precision, scale, length): Money, 19, 4, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Decimal TaxAmt
		{
			get { return (System.Decimal)GetValue((int)PurchaseOrderHeaderFieldIndex.TaxAmt, true); }
			set	{ SetValue((int)PurchaseOrderHeaderFieldIndex.TaxAmt, value); }
		}

		/// <summary>The TotalDue property of the Entity PurchaseOrderHeader<br/><br/>MS_Description: Total due to vendor. Computed as Subtotal + TaxAmt + Freight.<br/>Total due to vendor. Computed as Subtotal + TaxAmt + Freight.</summary>
		/// <remarks>Mapped on  table field: "PurchaseOrderHeader"."TotalDue".<br/>Table field type characteristics (type, precision, scale, length): Money, 19, 4, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Decimal TotalDue
		{
			get { return (System.Decimal)GetValue((int)PurchaseOrderHeaderFieldIndex.TotalDue, true); }
		}

		/// <summary>The VendorID property of the Entity PurchaseOrderHeader<br/><br/>MS_Description: Vendor with whom the purchase order is placed. Foreign key to Vendor.VendorID.<br/>Vendor with whom the purchase order is placed. Foreign key to Vendor.VendorID.</summary>
		/// <remarks>Mapped on  table field: "PurchaseOrderHeader"."VendorID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Int32 VendorID
		{
			get { return (System.Int32)GetValue((int)PurchaseOrderHeaderFieldIndex.VendorID, true); }
			set	{ SetValue((int)PurchaseOrderHeaderFieldIndex.VendorID, value); }
		}

		/// <summary>Gets the EntityCollection with the related entities of type 'PurchaseOrderHistoryEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(PurchaseOrderHistoryEntity))]
		public virtual EntityCollection<PurchaseOrderHistoryEntity> PurchaseOrderHistories { get { return GetOrCreateEntityCollection<PurchaseOrderHistoryEntity, PurchaseOrderHistoryEntityFactory>("PurchaseOrder", true, false, ref _purchaseOrderHistories); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'PurchaseOrderDetailEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(PurchaseOrderDetailEntity))]
		public virtual EntityCollection<PurchaseOrderDetailEntity> PurchaseOrderDetails { get { return GetOrCreateEntityCollection<PurchaseOrderDetailEntity, PurchaseOrderDetailEntityFactory>("PurchaseOrderHeader", true, false, ref _purchaseOrderDetails); } }

		/// <summary>Gets / sets related entity of type 'EmployeeEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual EmployeeEntity Employee
		{
			get { return _employee; }
			set { SetSingleRelatedEntityNavigator(value, "Employee"); }
		}

		/// <summary>Gets / sets related entity of type 'ShipMethodEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual ShipMethodEntity ShipMethod
		{
			get { return _shipMethod; }
			set { SetSingleRelatedEntityNavigator(value, "ShipMethod"); }
		}

		/// <summary>Gets / sets related entity of type 'VendorEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual VendorEntity Vendor
		{
			get { return _vendor; }
			set { SetSingleRelatedEntityNavigator(value, "Vendor"); }
		}

		// __LLBLGENPRO_USER_CODE_REGION_START CustomEntityCode
		// __LLBLGENPRO_USER_CODE_REGION_END

	}
}

namespace AW.Dal
{
	public enum PurchaseOrderHeaderFieldIndex
	{
		///<summary>EmployeeID. </summary>
		EmployeeID,
		///<summary>Freight. </summary>
		Freight,
		///<summary>ModifiedDate. </summary>
		ModifiedDate,
		///<summary>OrderDate. </summary>
		OrderDate,
		///<summary>PurchaseOrderID. </summary>
		PurchaseOrderID,
		///<summary>RevisionNumber. </summary>
		RevisionNumber,
		///<summary>ShipDate. </summary>
		ShipDate,
		///<summary>ShipMethodID. </summary>
		ShipMethodID,
		///<summary>Status. </summary>
		Status,
		///<summary>SubTotal. </summary>
		SubTotal,
		///<summary>TaxAmt. </summary>
		TaxAmt,
		///<summary>TotalDue. </summary>
		TotalDue,
		///<summary>VendorID. </summary>
		VendorID,
		/// <summary></summary>
		AmountOfFields
	}
}

namespace AW.Dal.RelationClasses
{
	/// <summary>Implements the relations factory for the entity: PurchaseOrderHeader. </summary>
	public partial class PurchaseOrderHeaderRelations: RelationFactory
	{
		/// <summary>Returns a new IEntityRelation object, between PurchaseOrderHeaderEntity and PurchaseOrderHistoryEntity over the 1:n relation they have, using the relation between the fields: PurchaseOrderHeader.PurchaseOrderID - PurchaseOrderHistory.ReferenceOrderID</summary>
		public virtual IEntityRelation PurchaseOrderHistoryEntityUsingReferenceOrderID
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "PurchaseOrderHistories", true, new[] { PurchaseOrderHeaderFields.PurchaseOrderID, PurchaseOrderHistoryFields.ReferenceOrderID }); }
		}

		/// <summary>Returns a new IEntityRelation object, between PurchaseOrderHeaderEntity and PurchaseOrderDetailEntity over the 1:n relation they have, using the relation between the fields: PurchaseOrderHeader.PurchaseOrderID - PurchaseOrderDetail.PurchaseOrderID</summary>
		public virtual IEntityRelation PurchaseOrderDetailEntityUsingPurchaseOrderID
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "PurchaseOrderDetails", true, new[] { PurchaseOrderHeaderFields.PurchaseOrderID, PurchaseOrderDetailFields.PurchaseOrderID }); }
		}

		/// <summary>Returns a new IEntityRelation object, between PurchaseOrderHeaderEntity and EmployeeEntity over the m:1 relation they have, using the relation between the fields: PurchaseOrderHeader.EmployeeID - Employee.EmployeeID</summary>
		public virtual IEntityRelation EmployeeEntityUsingEmployeeID
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "Employee", false, new[] { EmployeeFields.EmployeeID, PurchaseOrderHeaderFields.EmployeeID }); }
		}

		/// <summary>Returns a new IEntityRelation object, between PurchaseOrderHeaderEntity and ShipMethodEntity over the m:1 relation they have, using the relation between the fields: PurchaseOrderHeader.ShipMethodID - ShipMethod.ShipMethodID</summary>
		public virtual IEntityRelation ShipMethodEntityUsingShipMethodID
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "ShipMethod", false, new[] { ShipMethodFields.ShipMethodID, PurchaseOrderHeaderFields.ShipMethodID }); }
		}

		/// <summary>Returns a new IEntityRelation object, between PurchaseOrderHeaderEntity and VendorEntity over the m:1 relation they have, using the relation between the fields: PurchaseOrderHeader.VendorID - Vendor.VendorID</summary>
		public virtual IEntityRelation VendorEntityUsingVendorID
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "Vendor", false, new[] { VendorFields.VendorID, PurchaseOrderHeaderFields.VendorID }); }
		}

	}
	
	/// <summary>Static class which is used for providing relationship instances which are re-used internally for syncing</summary>
	internal static class StaticPurchaseOrderHeaderRelations
	{
		internal static readonly IEntityRelation PurchaseOrderHistoryEntityUsingReferenceOrderIDStatic = new PurchaseOrderHeaderRelations().PurchaseOrderHistoryEntityUsingReferenceOrderID;
		internal static readonly IEntityRelation PurchaseOrderDetailEntityUsingPurchaseOrderIDStatic = new PurchaseOrderHeaderRelations().PurchaseOrderDetailEntityUsingPurchaseOrderID;
		internal static readonly IEntityRelation EmployeeEntityUsingEmployeeIDStatic = new PurchaseOrderHeaderRelations().EmployeeEntityUsingEmployeeID;
		internal static readonly IEntityRelation ShipMethodEntityUsingShipMethodIDStatic = new PurchaseOrderHeaderRelations().ShipMethodEntityUsingShipMethodID;
		internal static readonly IEntityRelation VendorEntityUsingVendorIDStatic = new PurchaseOrderHeaderRelations().VendorEntityUsingVendorID;

		/// <summary>CTor</summary>
		static StaticPurchaseOrderHeaderRelations() { }
	}
}
