//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro 5.9.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using System.ComponentModel;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using AW.Dal.HelperClasses;
using AW.Dal.FactoryClasses;
using AW.Dal.RelationClasses;
using System.ComponentModel.DataAnnotations;
using SD.LLBLGen.Pro.ORMSupportClasses;

namespace AW.Dal.EntityClasses
{
	// __LLBLGENPRO_USER_CODE_REGION_START AdditionalNamespaces
	// __LLBLGENPRO_USER_CODE_REGION_END
	/// <summary>Entity class which represents the entity 'PurchaseOrderHistory'.<br/><br/></summary>
	[Serializable]
	public partial class PurchaseOrderHistoryEntity : TransactionHistoryEntity
		// __LLBLGENPRO_USER_CODE_REGION_START AdditionalInterfaces
		// __LLBLGENPRO_USER_CODE_REGION_END	
	{
		private PurchaseOrderHeaderEntity _purchaseOrder;
		private PurchaseOrderDetailEntity _purchaseOrderDetail;

		// __LLBLGENPRO_USER_CODE_REGION_START PrivateMembers
		// __LLBLGENPRO_USER_CODE_REGION_END
		private static Dictionary<string, Dictionary<string, string>>	_fieldsCustomProperties;
		private static PurchaseOrderHistoryEntityStaticMetaData _staticMetaData = new PurchaseOrderHistoryEntityStaticMetaData();
		private static PurchaseOrderHistoryRelations _relationsFactory = new PurchaseOrderHistoryRelations();

		/// <summary>All names of fields mapped onto a relation. Usable for in-memory filtering</summary>
		public new static partial class MemberNames
		{
			/// <summary>Member name Product</summary>
			public static readonly string Product = "Product";
			/// <summary>Member name PurchaseOrder</summary>
			public static readonly string PurchaseOrder = "PurchaseOrder";
			/// <summary>Member name PurchaseOrderDetail</summary>
			public static readonly string PurchaseOrderDetail = "PurchaseOrderDetail";
		}

		/// <summary>Static meta-data storage for navigator related information</summary>
		protected class PurchaseOrderHistoryEntityStaticMetaData : TransactionHistoryEntityStaticMetaData
		{
			public PurchaseOrderHistoryEntityStaticMetaData()
			{
				SetEntityCoreInfo("PurchaseOrderHistoryEntity", InheritanceHierarchyType.TargetPerEntityHierarchy, true, (int)AW.Dal.EntityType.PurchaseOrderHistoryEntity, typeof(PurchaseOrderHistoryEntity), typeof(PurchaseOrderHistoryEntityFactory), false);
				AddNavigatorMetaData<PurchaseOrderHistoryEntity, PurchaseOrderHeaderEntity>("PurchaseOrder", "PurchaseOrderHistories", (a, b) => a._purchaseOrder = b, a => a._purchaseOrder, (a, b) => a.PurchaseOrder = b, AW.Dal.RelationClasses.StaticPurchaseOrderHistoryRelations.PurchaseOrderHeaderEntityUsingReferenceOrderIDStatic, ()=>new PurchaseOrderHistoryRelations().PurchaseOrderHeaderEntityUsingReferenceOrderID, null, new int[] { (int)PurchaseOrderHistoryFieldIndex.ReferenceOrderID }, null, true, (int)AW.Dal.EntityType.PurchaseOrderHeaderEntity);
				AddNavigatorMetaData<PurchaseOrderHistoryEntity, PurchaseOrderDetailEntity>("PurchaseOrderDetail", "PurchaseOrderHistory", (a, b) => a._purchaseOrderDetail = b, a => a._purchaseOrderDetail, (a, b) => a.PurchaseOrderDetail = b, AW.Dal.RelationClasses.StaticPurchaseOrderHistoryRelations.PurchaseOrderDetailEntityUsingReferenceOrderLineIDReferenceOrderIDStatic, ()=>new PurchaseOrderHistoryRelations().PurchaseOrderDetailEntityUsingReferenceOrderLineIDReferenceOrderID, null, new int[] { (int)PurchaseOrderHistoryFieldIndex.ReferenceOrderLineID, (int)PurchaseOrderHistoryFieldIndex.ReferenceOrderID }, null, false, (int)AW.Dal.EntityType.PurchaseOrderDetailEntity);
			}
		}

		/// <summary>Static ctor</summary>
		static PurchaseOrderHistoryEntity()
		{
			SetupCustomPropertyHashtables();
		}

		/// <summary> CTor</summary>
		public PurchaseOrderHistoryEntity()
		{
			InitClassEmpty();
		}

		/// <summary> CTor</summary>
		/// <param name="fields">Fields object to set as the fields for this entity.</param>
		public PurchaseOrderHistoryEntity(IEntityFields2 fields) : base(fields)
		{
			InitClassEmpty();
		}

		/// <summary> CTor</summary>
		/// <param name="validator">The custom validator object for this PurchaseOrderHistoryEntity</param>
		public PurchaseOrderHistoryEntity(IValidator validator) : base(validator)
		{
			InitClassEmpty();
		}

		/// <summary> CTor</summary>
		/// <param name="transactionID">PK value for PurchaseOrderHistory which data should be fetched into this PurchaseOrderHistory object</param>
		public PurchaseOrderHistoryEntity(System.Int32 transactionID) : base(transactionID)
		{
			InitClassEmpty();
		}

		/// <summary> CTor</summary>
		/// <param name="transactionID">PK value for PurchaseOrderHistory which data should be fetched into this PurchaseOrderHistory object</param>
		/// <param name="validator">The custom validator object for this PurchaseOrderHistoryEntity</param>
		public PurchaseOrderHistoryEntity(System.Int32 transactionID, IValidator validator) : base(transactionID, validator)
		{
			InitClassEmpty();
		}

		/// <summary>Private CTor for deserialization</summary>
		/// <param name="info"></param>
		/// <param name="context"></param>
		protected PurchaseOrderHistoryEntity(SerializationInfo info, StreamingContext context) : base(info, context)
		{
			// __LLBLGENPRO_USER_CODE_REGION_START DeserializationConstructor
			// __LLBLGENPRO_USER_CODE_REGION_END
		}

		/// <summary>Gets a predicateexpression which filters on this entity. Only useful in entity fetches</summary>
		/// <param name="negate">Optional flag to produce a NOT filter, (true), or a normal filter (false, default). </param>
		/// <returns>ready to use predicateexpression</returns>
		public new static IPredicateExpression GetEntityTypeFilter(bool negate=false) { return ModelInfoProviderSingleton.GetInstance().GetEntityTypeFilter("PurchaseOrderHistoryEntity", negate); }

		/// <summary>Method which will construct a filter (predicate expression) for the unique constraint defined on the fields: ReferenceOrderID , ReferenceOrderLineID .</summary>
		/// <returns>true if succeeded and the contents is read, false otherwise</returns>
		public IPredicateExpression ConstructFilterForUCReferenceOrderIDReferenceOrderLineID()
		{
			var filter = new PredicateExpression();
			filter.Add(AW.Dal.HelperClasses.PurchaseOrderHistoryFields.ReferenceOrderID == this.Fields.GetCurrentValue((int)PurchaseOrderHistoryFieldIndex.ReferenceOrderID));
			filter.Add(AW.Dal.HelperClasses.PurchaseOrderHistoryFields.ReferenceOrderLineID == this.Fields.GetCurrentValue((int)PurchaseOrderHistoryFieldIndex.ReferenceOrderLineID));
 			return filter;
		}

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'PurchaseOrderHeader' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoPurchaseOrder() { return CreateRelationInfoForNavigator("PurchaseOrder"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'PurchaseOrderDetail' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoPurchaseOrderDetail() { return CreateRelationInfoForNavigator("PurchaseOrderDetail"); }
		
		/// <inheritdoc/>
		protected override EntityStaticMetaDataBase GetEntityStaticMetaData() {	return _staticMetaData; }

		/// <summary>Initializes the class members</summary>
		private void InitClassMembers()
		{

			// __LLBLGENPRO_USER_CODE_REGION_START InitClassMembers
			// __LLBLGENPRO_USER_CODE_REGION_END
		}

		/// <summary>Initializes the hashtables for the entity type and entity field custom properties. </summary>
		private static void SetupCustomPropertyHashtables()
		{
			_fieldsCustomProperties = new Dictionary<string, Dictionary<string, string>>();
			Dictionary<string, string> fieldHashtable;
		}

		/// <summary>Initializes the class with empty data, as if it is a new Entity.</summary>
		private void InitClassEmpty()
		{
			InitClassMembers();
			if(this.Fields.State==EntityState.New)
			{
				this.Fields.ForcedValueWrite((int)PurchaseOrderHistoryFieldIndex.TransactionType, "P");
			}
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassEmpty
			// __LLBLGENPRO_USER_CODE_REGION_END

		}

		/// <summary>The relations object holding all relations of this entity with other entity classes.</summary>
		public new static PurchaseOrderHistoryRelations Relations { get { return _relationsFactory; } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'PurchaseOrderHeader' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathPurchaseOrder { get { return _staticMetaData.GetPrefetchPathElement("PurchaseOrder", CommonEntityBase.CreateEntityCollection<PurchaseOrderHeaderEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'PurchaseOrderDetail' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathPurchaseOrderDetail { get { return _staticMetaData.GetPrefetchPathElement("PurchaseOrderDetail", CommonEntityBase.CreateEntityCollection<PurchaseOrderDetailEntity>()); } }

		/// <summary>The custom properties for the fields of this entity type. The returned Hashtable contains per fieldname a hashtable of name-value pairs. </summary>
		/// <remarks>The data returned from this property should be considered read-only: it is not thread safe to alter this data at runtime.</remarks>
		public new static Dictionary<string, Dictionary<string, string>> FieldsCustomProperties { get { return _fieldsCustomProperties;} }

		/// <inheritdoc/>
		[Browsable(false), XmlIgnore]
		protected override Dictionary<string, Dictionary<string, string>> FieldsCustomPropertiesOfType { get { return FieldsCustomProperties;} }

		/// <summary>Gets / sets related entity of type 'PurchaseOrderHeaderEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual PurchaseOrderHeaderEntity PurchaseOrder
		{
			get { return _purchaseOrder; }
			set { SetSingleRelatedEntityNavigator(value, "PurchaseOrder"); }
		}

		/// <summary>Gets / sets related entity of type 'PurchaseOrderDetailEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned.<br/><br/></summary>
		[Browsable(false)]
		public virtual PurchaseOrderDetailEntity PurchaseOrderDetail
		{
			get { return _purchaseOrderDetail; }
			set { SetSingleRelatedEntityNavigator(value, "PurchaseOrderDetail"); }
		}

		// __LLBLGENPRO_USER_CODE_REGION_START CustomEntityCode
		// __LLBLGENPRO_USER_CODE_REGION_END

	}
}

namespace AW.Dal
{
	public enum PurchaseOrderHistoryFieldIndex
	{
		///<summary>ActualCost. Inherited from TransactionHistory</summary>
		ActualCost,
		///<summary>ModifiedDate. Inherited from TransactionHistory</summary>
		ModifiedDate,
		///<summary>ProductID. Inherited from TransactionHistory</summary>
		ProductID,
		///<summary>Quantity. Inherited from TransactionHistory</summary>
		Quantity,
		///<summary>ReferenceOrderID. Inherited from TransactionHistory</summary>
		ReferenceOrderID,
		///<summary>ReferenceOrderLineID. Inherited from TransactionHistory</summary>
		ReferenceOrderLineID,
		///<summary>TransactionDate. Inherited from TransactionHistory</summary>
		TransactionDate,
		///<summary>TransactionID. Inherited from TransactionHistory</summary>
		TransactionID,
		///<summary>TransactionType. Inherited from TransactionHistory</summary>
		TransactionType,
		/// <summary></summary>
		AmountOfFields
	}
}

namespace AW.Dal.RelationClasses
{
	/// <summary>Implements the relations factory for the entity: PurchaseOrderHistory. </summary>
	public partial class PurchaseOrderHistoryRelations: TransactionHistoryRelations
	{

		/// <summary>Returns a new IEntityRelation object, between PurchaseOrderHistoryEntity and PurchaseOrderDetailEntity over the 1:1 relation they have, using the relation between the fields: PurchaseOrderHistory.ReferenceOrderLineID - PurchaseOrderDetail.PurchaseOrderDetailID, PurchaseOrderHistory.ReferenceOrderID - PurchaseOrderDetail.PurchaseOrderID</summary>
		public virtual IEntityRelation PurchaseOrderDetailEntityUsingReferenceOrderLineIDReferenceOrderID
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToOne, "PurchaseOrderDetail", false, new[] { PurchaseOrderDetailFields.PurchaseOrderDetailID, PurchaseOrderHistoryFields.ReferenceOrderLineID, PurchaseOrderDetailFields.PurchaseOrderID, PurchaseOrderHistoryFields.ReferenceOrderID }); }
		}

		/// <summary>Returns a new IEntityRelation object, between PurchaseOrderHistoryEntity and ProductEntity over the m:1 relation they have, using the relation between the fields: PurchaseOrderHistory.ProductID - Product.ProductID</summary>
		public override IEntityRelation ProductEntityUsingProductID
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "Product", false, new[] { ProductFields.ProductID, PurchaseOrderHistoryFields.ProductID }); }
		}

		/// <summary>Returns a new IEntityRelation object, between PurchaseOrderHistoryEntity and PurchaseOrderHeaderEntity over the m:1 relation they have, using the relation between the fields: PurchaseOrderHistory.ReferenceOrderID - PurchaseOrderHeader.PurchaseOrderID</summary>
		public virtual IEntityRelation PurchaseOrderHeaderEntityUsingReferenceOrderID
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "PurchaseOrder", false, new[] { PurchaseOrderHeaderFields.PurchaseOrderID, PurchaseOrderHistoryFields.ReferenceOrderID }); }
		}

	}
	
	/// <summary>Static class which is used for providing relationship instances which are re-used internally for syncing</summary>
	internal static class StaticPurchaseOrderHistoryRelations
	{
		internal static readonly IEntityRelation PurchaseOrderDetailEntityUsingReferenceOrderLineIDReferenceOrderIDStatic = new PurchaseOrderHistoryRelations().PurchaseOrderDetailEntityUsingReferenceOrderLineIDReferenceOrderID;
		internal static readonly IEntityRelation ProductEntityUsingProductIDStatic = new PurchaseOrderHistoryRelations().ProductEntityUsingProductID;
		internal static readonly IEntityRelation PurchaseOrderHeaderEntityUsingReferenceOrderIDStatic = new PurchaseOrderHistoryRelations().PurchaseOrderHeaderEntityUsingReferenceOrderID;

		/// <summary>CTor</summary>
		static StaticPurchaseOrderHistoryRelations() { }
	}
}
