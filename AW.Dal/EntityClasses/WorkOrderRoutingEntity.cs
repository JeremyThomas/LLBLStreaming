//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro 5.9.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using System.ComponentModel;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using AW.Dal.HelperClasses;
using AW.Dal.FactoryClasses;
using AW.Dal.RelationClasses;
using System.ComponentModel.DataAnnotations;
using SD.LLBLGen.Pro.ORMSupportClasses;

namespace AW.Dal.EntityClasses
{
	// __LLBLGENPRO_USER_CODE_REGION_START AdditionalNamespaces
	// __LLBLGENPRO_USER_CODE_REGION_END
	/// <summary>Entity class which represents the entity 'WorkOrderRouting'.<br/><br/>MS_Description: Work order details.<br/></summary>
	[Serializable]
	public partial class WorkOrderRoutingEntity : CommonEntityBase
		// __LLBLGENPRO_USER_CODE_REGION_START AdditionalInterfaces
		// __LLBLGENPRO_USER_CODE_REGION_END	
	{
		private LocationEntity _location;
		private WorkOrderEntity _workOrder;

		// __LLBLGENPRO_USER_CODE_REGION_START PrivateMembers
		// __LLBLGENPRO_USER_CODE_REGION_END
		private static Dictionary<string, string>	_customProperties;
		private static Dictionary<string, Dictionary<string, string>>	_fieldsCustomProperties;
		private static WorkOrderRoutingEntityStaticMetaData _staticMetaData = new WorkOrderRoutingEntityStaticMetaData();
		private static WorkOrderRoutingRelations _relationsFactory = new WorkOrderRoutingRelations();

		/// <summary>All names of fields mapped onto a relation. Usable for in-memory filtering</summary>
		public static partial class MemberNames
		{
			/// <summary>Member name Location</summary>
			public static readonly string Location = "Location";
			/// <summary>Member name WorkOrder</summary>
			public static readonly string WorkOrder = "WorkOrder";
		}

		/// <summary>Static meta-data storage for navigator related information</summary>
		protected class WorkOrderRoutingEntityStaticMetaData : EntityStaticMetaDataBase
		{
			public WorkOrderRoutingEntityStaticMetaData()
			{
				SetEntityCoreInfo("WorkOrderRoutingEntity", InheritanceHierarchyType.None, false, (int)AW.Dal.EntityType.WorkOrderRoutingEntity, typeof(WorkOrderRoutingEntity), typeof(WorkOrderRoutingEntityFactory), false);
				AddNavigatorMetaData<WorkOrderRoutingEntity, LocationEntity>("Location", "WorkOrderRoutings", (a, b) => a._location = b, a => a._location, (a, b) => a.Location = b, AW.Dal.RelationClasses.StaticWorkOrderRoutingRelations.LocationEntityUsingLocationIDStatic, ()=>new WorkOrderRoutingRelations().LocationEntityUsingLocationID, null, new int[] { (int)WorkOrderRoutingFieldIndex.LocationID }, null, true, (int)AW.Dal.EntityType.LocationEntity);
				AddNavigatorMetaData<WorkOrderRoutingEntity, WorkOrderEntity>("WorkOrder", "WorkOrderRoutings", (a, b) => a._workOrder = b, a => a._workOrder, (a, b) => a.WorkOrder = b, AW.Dal.RelationClasses.StaticWorkOrderRoutingRelations.WorkOrderEntityUsingWorkOrderIDStatic, ()=>new WorkOrderRoutingRelations().WorkOrderEntityUsingWorkOrderID, null, new int[] { (int)WorkOrderRoutingFieldIndex.WorkOrderID }, null, true, (int)AW.Dal.EntityType.WorkOrderEntity);
			}
		}

		/// <summary>Static ctor</summary>
		static WorkOrderRoutingEntity()
		{
			SetupCustomPropertyHashtables();
		}

		/// <summary> CTor</summary>
		public WorkOrderRoutingEntity()
		{
			InitClassEmpty(null, null);
		}

		/// <summary> CTor</summary>
		/// <param name="fields">Fields object to set as the fields for this entity.</param>
		public WorkOrderRoutingEntity(IEntityFields2 fields)
		{
			InitClassEmpty(null, fields);
		}

		/// <summary> CTor</summary>
		/// <param name="validator">The custom validator object for this WorkOrderRoutingEntity</param>
		public WorkOrderRoutingEntity(IValidator validator)
		{
			InitClassEmpty(validator, null);
		}

		/// <summary> CTor</summary>
		/// <param name="operationSequence">PK value for WorkOrderRouting which data should be fetched into this WorkOrderRouting object</param>
		/// <param name="productID">PK value for WorkOrderRouting which data should be fetched into this WorkOrderRouting object</param>
		/// <param name="workOrderID">PK value for WorkOrderRouting which data should be fetched into this WorkOrderRouting object</param>
		public WorkOrderRoutingEntity(System.Int16 operationSequence, System.Int32 productID, System.Int32 workOrderID) : this(operationSequence, productID, workOrderID, null)
		{
		}

		/// <summary> CTor</summary>
		/// <param name="operationSequence">PK value for WorkOrderRouting which data should be fetched into this WorkOrderRouting object</param>
		/// <param name="productID">PK value for WorkOrderRouting which data should be fetched into this WorkOrderRouting object</param>
		/// <param name="workOrderID">PK value for WorkOrderRouting which data should be fetched into this WorkOrderRouting object</param>
		/// <param name="validator">The custom validator object for this WorkOrderRoutingEntity</param>
		public WorkOrderRoutingEntity(System.Int16 operationSequence, System.Int32 productID, System.Int32 workOrderID, IValidator validator)
		{
			InitClassEmpty(validator, null);
			this.OperationSequence = operationSequence;
			this.ProductID = productID;
			this.WorkOrderID = workOrderID;
		}

		/// <summary>Private CTor for deserialization</summary>
		/// <param name="info"></param>
		/// <param name="context"></param>
		protected WorkOrderRoutingEntity(SerializationInfo info, StreamingContext context) : base(info, context)
		{
			// __LLBLGENPRO_USER_CODE_REGION_START DeserializationConstructor
			// __LLBLGENPRO_USER_CODE_REGION_END
		}

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'Location' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLocation() { return CreateRelationInfoForNavigator("Location"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'WorkOrder' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoWorkOrder() { return CreateRelationInfoForNavigator("WorkOrder"); }
		
		/// <inheritdoc/>
		protected override EntityStaticMetaDataBase GetEntityStaticMetaData() {	return _staticMetaData; }

		/// <summary>Initializes the class members</summary>
		private void InitClassMembers()
		{
			PerformDependencyInjection();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassMembers
			// __LLBLGENPRO_USER_CODE_REGION_END
			OnInitClassMembersComplete();
		}

		/// <summary>Initializes the hashtables for the entity type and entity field custom properties. </summary>
		private static void SetupCustomPropertyHashtables()
		{
			_customProperties = new Dictionary<string, string>();
			_customProperties.Add("MS_Description", @"Work order details.");
			_fieldsCustomProperties = new Dictionary<string, Dictionary<string, string>>();
			Dictionary<string, string> fieldHashtable;
			fieldHashtable = new Dictionary<string, string>();
			fieldHashtable.Add("MS_Description", @"Actual manufacturing cost.");
			_fieldsCustomProperties.Add("ActualCost", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();
			fieldHashtable.Add("MS_Description", @"Actual end date.");
			_fieldsCustomProperties.Add("ActualEndDate", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();
			fieldHashtable.Add("MS_Description", @"Number of manufacturing hours used.");
			_fieldsCustomProperties.Add("ActualResourceHrs", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();
			fieldHashtable.Add("MS_Description", @"Actual start date.");
			_fieldsCustomProperties.Add("ActualStartDate", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();
			fieldHashtable.Add("MS_Description", @"Manufacturing location where the part is processed. Foreign key to Location.LocationID.");
			_fieldsCustomProperties.Add("LocationID", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();
			fieldHashtable.Add("MS_Description", @"Date and time the record was last updated.");
			_fieldsCustomProperties.Add("ModifiedDate", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();
			fieldHashtable.Add("MS_Description", @"Primary key. Indicates the manufacturing process sequence.");
			_fieldsCustomProperties.Add("OperationSequence", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();
			fieldHashtable.Add("MS_Description", @"Estimated manufacturing cost.");
			_fieldsCustomProperties.Add("PlannedCost", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();
			fieldHashtable.Add("MS_Description", @"Primary key. Foreign key to Product.ProductID.");
			_fieldsCustomProperties.Add("ProductID", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();
			fieldHashtable.Add("MS_Description", @"Planned manufacturing end date.");
			_fieldsCustomProperties.Add("ScheduledEndDate", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();
			fieldHashtable.Add("MS_Description", @"Planned manufacturing start date.");
			_fieldsCustomProperties.Add("ScheduledStartDate", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();
			fieldHashtable.Add("MS_Description", @"Clustered index created by a primary key constraint.");
			_fieldsCustomProperties.Add("WorkOrderID", fieldHashtable);
		}

		/// <summary>Initializes the class with empty data, as if it is a new Entity.</summary>
		/// <param name="validator">The validator object for this WorkOrderRoutingEntity</param>
		/// <param name="fields">Fields of this entity</param>
		private void InitClassEmpty(IValidator validator, IEntityFields2 fields)
		{
			OnInitializing();
			this.Fields = fields ?? CreateFields();
			this.Validator = validator;
			InitClassMembers();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassEmpty
			// __LLBLGENPRO_USER_CODE_REGION_END

			OnInitialized();
		}

		/// <summary>The relations object holding all relations of this entity with other entity classes.</summary>
		public static WorkOrderRoutingRelations Relations { get { return _relationsFactory; } }

		/// <summary>The custom properties for this entity type.</summary>
		/// <remarks>The data returned from this property should be considered read-only: it is not thread safe to alter this data at runtime.</remarks>
		public  static Dictionary<string, string> CustomProperties { get { return _customProperties;} }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Location' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLocation { get { return _staticMetaData.GetPrefetchPathElement("Location", CommonEntityBase.CreateEntityCollection<LocationEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'WorkOrder' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathWorkOrder { get { return _staticMetaData.GetPrefetchPathElement("WorkOrder", CommonEntityBase.CreateEntityCollection<WorkOrderEntity>()); } }

		/// <inheritdoc/>
		[Browsable(false), XmlIgnore]
		protected override Dictionary<string, string> CustomPropertiesOfType { get { return CustomProperties;} }

		/// <summary>The custom properties for the fields of this entity type. The returned Hashtable contains per fieldname a hashtable of name-value pairs. </summary>
		/// <remarks>The data returned from this property should be considered read-only: it is not thread safe to alter this data at runtime.</remarks>
		public  static Dictionary<string, Dictionary<string, string>> FieldsCustomProperties { get { return _fieldsCustomProperties;} }

		/// <inheritdoc/>
		[Browsable(false), XmlIgnore]
		protected override Dictionary<string, Dictionary<string, string>> FieldsCustomPropertiesOfType { get { return FieldsCustomProperties;} }

		/// <summary>The ActualCost property of the Entity WorkOrderRouting<br/><br/>MS_Description: Actual manufacturing cost.<br/>Actual manufacturing cost.</summary>
		/// <remarks>Mapped on  table field: "WorkOrderRouting"."ActualCost".<br/>Table field type characteristics (type, precision, scale, length): Money, 19, 4, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Decimal> ActualCost
		{
			get { return (Nullable<System.Decimal>)GetValue((int)WorkOrderRoutingFieldIndex.ActualCost, false); }
			set	{ SetValue((int)WorkOrderRoutingFieldIndex.ActualCost, value); }
		}

		/// <summary>The ActualEndDate property of the Entity WorkOrderRouting<br/><br/>MS_Description: Actual end date.<br/>Actual end date.</summary>
		/// <remarks>Mapped on  table field: "WorkOrderRouting"."ActualEndDate".<br/>Table field type characteristics (type, precision, scale, length): DateTime, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.DateTime> ActualEndDate
		{
			get { return (Nullable<System.DateTime>)GetValue((int)WorkOrderRoutingFieldIndex.ActualEndDate, false); }
			set	{ SetValue((int)WorkOrderRoutingFieldIndex.ActualEndDate, value); }
		}

		/// <summary>The ActualResourceHrs property of the Entity WorkOrderRouting<br/><br/>MS_Description: Number of manufacturing hours used.<br/>Number of manufacturing hours used.</summary>
		/// <remarks>Mapped on  table field: "WorkOrderRouting"."ActualResourceHrs".<br/>Table field type characteristics (type, precision, scale, length): Decimal, 9, 4, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Decimal> ActualResourceHrs
		{
			get { return (Nullable<System.Decimal>)GetValue((int)WorkOrderRoutingFieldIndex.ActualResourceHrs, false); }
			set	{ SetValue((int)WorkOrderRoutingFieldIndex.ActualResourceHrs, value); }
		}

		/// <summary>The ActualStartDate property of the Entity WorkOrderRouting<br/><br/>MS_Description: Actual start date.<br/>Actual start date.</summary>
		/// <remarks>Mapped on  table field: "WorkOrderRouting"."ActualStartDate".<br/>Table field type characteristics (type, precision, scale, length): DateTime, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.DateTime> ActualStartDate
		{
			get { return (Nullable<System.DateTime>)GetValue((int)WorkOrderRoutingFieldIndex.ActualStartDate, false); }
			set	{ SetValue((int)WorkOrderRoutingFieldIndex.ActualStartDate, value); }
		}

		/// <summary>The LocationID property of the Entity WorkOrderRouting<br/><br/>MS_Description: Manufacturing location where the part is processed. Foreign key to Location.LocationID.<br/>Manufacturing location where the part is processed. Foreign key to Location.LocationID.</summary>
		/// <remarks>Mapped on  table field: "WorkOrderRouting"."LocationID".<br/>Table field type characteristics (type, precision, scale, length): SmallInt, 5, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Int16 LocationID
		{
			get { return (System.Int16)GetValue((int)WorkOrderRoutingFieldIndex.LocationID, true); }
			set	{ SetValue((int)WorkOrderRoutingFieldIndex.LocationID, value); }
		}

		/// <summary>The ModifiedDate property of the Entity WorkOrderRouting<br/><br/>MS_Description: Date and time the record was last updated.<br/>Date and time the record was last updated.</summary>
		/// <remarks>Mapped on  table field: "WorkOrderRouting"."ModifiedDate".<br/>Table field type characteristics (type, precision, scale, length): DateTime, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.DateTime ModifiedDate
		{
			get { return (System.DateTime)GetValue((int)WorkOrderRoutingFieldIndex.ModifiedDate, true); }
			set	{ SetValue((int)WorkOrderRoutingFieldIndex.ModifiedDate, value); }
		}

		/// <summary>The OperationSequence property of the Entity WorkOrderRouting<br/><br/>MS_Description: Primary key. Indicates the manufacturing process sequence.<br/>Primary key. Indicates the manufacturing process sequence.</summary>
		/// <remarks>Mapped on  table field: "WorkOrderRouting"."OperationSequence".<br/>Table field type characteristics (type, precision, scale, length): SmallInt, 5, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, true, false</remarks>
		public virtual System.Int16 OperationSequence
		{
			get { return (System.Int16)GetValue((int)WorkOrderRoutingFieldIndex.OperationSequence, true); }
			set	{ SetValue((int)WorkOrderRoutingFieldIndex.OperationSequence, value); }
		}

		/// <summary>The PlannedCost property of the Entity WorkOrderRouting<br/><br/>MS_Description: Estimated manufacturing cost.<br/>Estimated manufacturing cost.</summary>
		/// <remarks>Mapped on  table field: "WorkOrderRouting"."PlannedCost".<br/>Table field type characteristics (type, precision, scale, length): Money, 19, 4, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Decimal PlannedCost
		{
			get { return (System.Decimal)GetValue((int)WorkOrderRoutingFieldIndex.PlannedCost, true); }
			set	{ SetValue((int)WorkOrderRoutingFieldIndex.PlannedCost, value); }
		}

		/// <summary>The ProductID property of the Entity WorkOrderRouting<br/><br/>MS_Description: Primary key. Foreign key to Product.ProductID.<br/>Primary key. Foreign key to Product.ProductID.</summary>
		/// <remarks>Mapped on  table field: "WorkOrderRouting"."ProductID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, true, false</remarks>
		public virtual System.Int32 ProductID
		{
			get { return (System.Int32)GetValue((int)WorkOrderRoutingFieldIndex.ProductID, true); }
			set	{ SetValue((int)WorkOrderRoutingFieldIndex.ProductID, value); }
		}

		/// <summary>The ScheduledEndDate property of the Entity WorkOrderRouting<br/><br/>MS_Description: Planned manufacturing end date.<br/>Planned manufacturing end date.</summary>
		/// <remarks>Mapped on  table field: "WorkOrderRouting"."ScheduledEndDate".<br/>Table field type characteristics (type, precision, scale, length): DateTime, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.DateTime ScheduledEndDate
		{
			get { return (System.DateTime)GetValue((int)WorkOrderRoutingFieldIndex.ScheduledEndDate, true); }
			set	{ SetValue((int)WorkOrderRoutingFieldIndex.ScheduledEndDate, value); }
		}

		/// <summary>The ScheduledStartDate property of the Entity WorkOrderRouting<br/><br/>MS_Description: Planned manufacturing start date.<br/>Planned manufacturing start date.</summary>
		/// <remarks>Mapped on  table field: "WorkOrderRouting"."ScheduledStartDate".<br/>Table field type characteristics (type, precision, scale, length): DateTime, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.DateTime ScheduledStartDate
		{
			get { return (System.DateTime)GetValue((int)WorkOrderRoutingFieldIndex.ScheduledStartDate, true); }
			set	{ SetValue((int)WorkOrderRoutingFieldIndex.ScheduledStartDate, value); }
		}

		/// <summary>The WorkOrderID property of the Entity WorkOrderRouting<br/><br/>MS_Description: Clustered index created by a primary key constraint.<br/>Clustered index created by a primary key constraint.</summary>
		/// <remarks>Mapped on  table field: "WorkOrderRouting"."WorkOrderID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, true, false</remarks>
		public virtual System.Int32 WorkOrderID
		{
			get { return (System.Int32)GetValue((int)WorkOrderRoutingFieldIndex.WorkOrderID, true); }
			set	{ SetValue((int)WorkOrderRoutingFieldIndex.WorkOrderID, value); }
		}

		/// <summary>Gets / sets related entity of type 'LocationEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual LocationEntity Location
		{
			get { return _location; }
			set { SetSingleRelatedEntityNavigator(value, "Location"); }
		}

		/// <summary>Gets / sets related entity of type 'WorkOrderEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual WorkOrderEntity WorkOrder
		{
			get { return _workOrder; }
			set { SetSingleRelatedEntityNavigator(value, "WorkOrder"); }
		}

		// __LLBLGENPRO_USER_CODE_REGION_START CustomEntityCode
		// __LLBLGENPRO_USER_CODE_REGION_END

	}
}

namespace AW.Dal
{
	public enum WorkOrderRoutingFieldIndex
	{
		///<summary>ActualCost. </summary>
		ActualCost,
		///<summary>ActualEndDate. </summary>
		ActualEndDate,
		///<summary>ActualResourceHrs. </summary>
		ActualResourceHrs,
		///<summary>ActualStartDate. </summary>
		ActualStartDate,
		///<summary>LocationID. </summary>
		LocationID,
		///<summary>ModifiedDate. </summary>
		ModifiedDate,
		///<summary>OperationSequence. </summary>
		OperationSequence,
		///<summary>PlannedCost. </summary>
		PlannedCost,
		///<summary>ProductID. </summary>
		ProductID,
		///<summary>ScheduledEndDate. </summary>
		ScheduledEndDate,
		///<summary>ScheduledStartDate. </summary>
		ScheduledStartDate,
		///<summary>WorkOrderID. </summary>
		WorkOrderID,
		/// <summary></summary>
		AmountOfFields
	}
}

namespace AW.Dal.RelationClasses
{
	/// <summary>Implements the relations factory for the entity: WorkOrderRouting. </summary>
	public partial class WorkOrderRoutingRelations: RelationFactory
	{

		/// <summary>Returns a new IEntityRelation object, between WorkOrderRoutingEntity and LocationEntity over the m:1 relation they have, using the relation between the fields: WorkOrderRouting.LocationID - Location.LocationID</summary>
		public virtual IEntityRelation LocationEntityUsingLocationID
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "Location", false, new[] { LocationFields.LocationID, WorkOrderRoutingFields.LocationID }); }
		}

		/// <summary>Returns a new IEntityRelation object, between WorkOrderRoutingEntity and WorkOrderEntity over the m:1 relation they have, using the relation between the fields: WorkOrderRouting.WorkOrderID - WorkOrder.WorkOrderID</summary>
		public virtual IEntityRelation WorkOrderEntityUsingWorkOrderID
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "WorkOrder", false, new[] { WorkOrderFields.WorkOrderID, WorkOrderRoutingFields.WorkOrderID }); }
		}

	}
	
	/// <summary>Static class which is used for providing relationship instances which are re-used internally for syncing</summary>
	internal static class StaticWorkOrderRoutingRelations
	{
		internal static readonly IEntityRelation LocationEntityUsingLocationIDStatic = new WorkOrderRoutingRelations().LocationEntityUsingLocationID;
		internal static readonly IEntityRelation WorkOrderEntityUsingWorkOrderIDStatic = new WorkOrderRoutingRelations().WorkOrderEntityUsingWorkOrderID;

		/// <summary>CTor</summary>
		static StaticWorkOrderRoutingRelations() { }
	}
}
